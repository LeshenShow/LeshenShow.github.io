{"version":3,"file":"static/js/64.8f60ff06.chunk.js","mappings":"8JACA,SAAgB,SAAW,wBAAwB,SAAW,wBAAwB,aAAe,4BAA4B,UAAY,yBAAyB,YAAc,2BAA2B,YAAc,2BAA2B,UAAY,0BCApQ,EAAkE,4BAAlE,EAA6G,gC,aCsD7G,QApDiBA,IACf,IAAIC,EAAkBD,EAAME,gBACxBC,EAAcC,KAAKC,IAAIL,EAAMM,SAAU,GACvCC,EAAcH,KAAKI,KAAKP,EAAkBE,GAC1CM,EAAeL,KAAKM,IAAIH,EAAaP,EAAMW,UAC1CC,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,GAC7CC,GAAeH,EAAgB,GAAKT,EAAc,EAClDa,EAAeJ,EAAgBT,EAEnC,MAAMc,EAAQ,GACd,IAAK,IAAIC,EAAI,EAAGA,GAAKT,EAAcS,IACjCD,EAAME,KAAKD,GAEb,OACEE,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAeC,SAAA,CAC5BX,EAAgB,IACfY,EAAAA,EAAAA,KAAA,UACEC,QAASA,KACPZ,EAAiBD,EAAgB,EAAE,EACnCW,SAED,SAGJN,EACES,QAAQC,GAASA,GAAQZ,GAAeY,GAAQX,IAChDY,KAAKD,IAEFH,EAAAA,EAAAA,KAAA,QACEH,UAAWrB,EAAM6B,cAAgBF,GAAQL,EACzCG,QAAUK,IACR9B,EAAM+B,cAAcJ,EAAK,EACzBJ,SAEDI,MAKRlB,EAAeG,IACdY,EAAAA,EAAAA,KAAA,UACEC,QAASA,KACPZ,EAAiBD,EAAgB,EAAE,EACnCW,SAED,WAGD,E,cCUV,QAzDYvB,IACV,IAAIgC,EAAOhC,EAAMgC,KACjB,OAEEZ,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAMW,UAAUV,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACU,EAAAA,GAAO,CAACC,GAAI,YAAcH,EAAKI,GAAGb,UACjCC,EAAAA,EAAAA,KAAA,OACEH,UAAWC,EAAMe,UACjBC,IAAI,GACJC,IACuB,MAArBP,EAAKQ,OAAOC,MACRT,EAAKQ,OAAOC,MACZ,wDAKZrB,EAAAA,EAAAA,MAAA,OAAAG,SAAA,CACGS,EAAKU,KACL,MACAV,EAAKI,OAERZ,EAAAA,EAAAA,KAAA,OAAAD,SAAqB,MAAfS,EAAKW,OAAiBX,EAAKW,OAAS,kBAC1CnB,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAMsB,YAAYrB,SAC/BS,EAAKa,UACJrB,EAAAA,EAAAA,KAAA,UACEH,UAAWC,EAAMwB,UACjBC,SAAU/C,EAAMgD,oBAAoBC,MAAMb,GAAOA,IAAOJ,EAAKI,KAC7DX,QAASA,KACPzB,EAAMkD,SAASlB,EAAKI,GAAG,EAQvBb,SACH,cAIDC,EAAAA,EAAAA,KAAA,UACEH,UAAWC,EAAM6B,YACjBJ,SAAU/C,EAAMgD,oBAAoBC,MAAMb,GAAOA,IAAOJ,EAAKI,KAC7DX,QAASA,KACPzB,EAAMoD,OAAOpB,EAAKI,GAAG,EACrBb,SACH,eAKD,ECnCV,QAlBavB,IAEToB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAM+B,SAAS9B,SAAA,EAC7B+B,EAAAA,EAAAA,eAACC,EAAS,IAAKvD,EAAOwD,IAAK,KAAM7C,QAAS,MAEzCX,EAAMyD,MAAM7B,KAAKI,IAChBR,EAAAA,EAAAA,KAACkC,EAAI,CACHV,oBAAqBhD,EAAMgD,oBAC3BI,OAAQpD,EAAMoD,OACdF,SAAUlD,EAAMkD,SAChBlB,KAAMA,GACDA,EAAKI,S,wBCbb,MAAMuB,EAAYC,GAAUA,EAAMC,UAAUJ,MAGtCK,EAAeF,GAAUA,EAAMC,UAAUvD,SACzCyD,EAAsBH,GAAUA,EAAMC,UAAU3D,gBAChD8D,EAAkBJ,GAAUA,EAAMC,UAAUhC,YAC5CoC,EAAiBL,GAAUA,EAAMC,UAAUK,WAC3CC,EAA0BP,GACrCA,EAAMC,UAAUb,oBCSlB,MAAMoB,UAA0BC,EAAAA,UAAgBC,WAAAA,GAAA,SAAAC,WAkC9C,KACAxC,cAAiByC,IACf,IAAI,SAAElE,GAAamE,KAAKzE,MACxByE,KAAKzE,MAAM0E,aAAaF,EAAiBlE,EAAS,CAOlD,CA3CFqE,iBAAAA,GACE,IAAI,YAAE9C,EAAW,SAAEvB,GAAamE,KAAKzE,MACrCyE,KAAKzE,MAAM0E,aAAa7C,EAAavB,EACvC,CAyCAsE,MAAAA,GACE,OACExD,EAAAA,EAAAA,MAAAyD,EAAAA,SAAA,CAAAtD,SAAA,CACGkD,KAAKzE,MAAMkE,YAAa1C,EAAAA,EAAAA,KAACsD,EAAAA,EAAS,IAAM,MACzCtD,EAAAA,EAAAA,KAACuD,EAAK,CACJ7E,gBAAiBuE,KAAKzE,MAAME,gBAC5BI,SAAUmE,KAAKzE,MAAMM,SACrBuB,YAAa4C,KAAKzE,MAAM6B,YACxB4B,MAAOgB,KAAKzE,MAAMyD,MAClBL,OAAQqB,KAAKzE,MAAMoD,OACnBF,SAAUuB,KAAKzE,MAAMkD,SACrBnB,cAAe0C,KAAK1C,cACpBiB,oBAAqByB,KAAKzE,MAAMgD,wBAIxC,EAGF,IAUIgC,EAAqB,CACvB5B,OAAM,KACNF,SAAQ,KACR+B,eAAc,KACdP,aACF,MAIA,SAAeQ,EAAAA,EAAAA,KAEbC,EAAAA,EAAAA,KArBqBvB,IACd,CACLH,MAAOE,EAASC,GAChBtD,SAAUwD,EAAYF,GACtB1D,gBAAiB6D,EAAmBH,GACpC/B,YAAamC,EAAeJ,GAC5BM,WAAYD,EAAcL,GAC1BZ,oBAAqBmB,EAAuBP,MAcrBoB,GAF3B,CAGEZ,E","sources":["webpack://my-app/./src/components/Users/Users.module.css?b9d0","webpack://my-app/./src/components/common/Paginator/Paginator.module.css?6caa","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/usersSelectors.js","components/Users/UsersContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"userBody\":\"Users_userBody__ha96A\",\"pageList\":\"Users_pageList__TDsYy\",\"selectedPage\":\"Users_selectedPage__VpTaw\",\"followBtn\":\"Users_followBtn__4bzeB\",\"unfollowBtn\":\"Users_unfollowBtn__Dq-Sz\",\"followCheck\":\"Users_followCheck__8PAD1\",\"usersList\":\"Users_usersList__o5XOW\"};","// extracted by mini-css-extract-plugin\nexport default {\"userBody\":\"Paginator_userBody__fQCgq\",\"pageList\":\"Paginator_pageList__donKV\",\"selectedPage\":\"Paginator_selectedPage__3GQUp\",\"followBtn\":\"Paginator_followBtn__dDIBZ\",\"unfollowBtn\":\"Paginator_unfollowBtn__fcghV\",\"followCheck\":\"Paginator_followCheck__KK1-+\",\"usersList\":\"Paginator_usersList__SjiEo\"};","import React, { useState } from \"react\";\r\nimport style from \"./Paginator.module.css\";\r\n\r\nlet Paginator = (props) => {\r\n  let totalItemsCount = props.totalUsersCount;\r\n  let portionSize = Math.max(props.pageSize, 9);\r\n  let pagesUpload = Math.ceil(totalItemsCount / portionSize);\r\n  let portionCount = Math.min(pagesUpload, props.maxSize);\r\n  let [portionNumber, setPortionNumber] = useState(1);\r\n  let leftPortion = (portionNumber - 1) * portionSize + 1;\r\n  let rightPortion = portionNumber * portionSize;\r\n\r\n  const pages = [];\r\n  for (let i = 1; i <= portionCount; i++) {\r\n    pages.push(i);\r\n  }\r\n  return (\r\n    <div className={style.pageList}>\r\n      {portionNumber > 1 && (\r\n        <button\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber - 1);\r\n          }}\r\n        >\r\n          {\"PREV\"}\r\n        </button>\r\n      )}\r\n      {pages\r\n        .filter((page) => page >= leftPortion && page <= rightPortion)\r\n        .map((page) => {\r\n          return (\r\n            <span\r\n              className={props.currentPage === page && style.selectedPage}\r\n              onClick={(event_obrabotchik) => {\r\n                props.onPageChanged(page);\r\n              }}\r\n            >\r\n              {page}\r\n            </span>\r\n          );\r\n        })}\r\n\r\n      {portionCount > portionNumber && (\r\n        <button\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber + 1);\r\n          }}\r\n        >\r\n          {\"NEXT\"}\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paginator;\r\n","import React from \"react\";\r\nimport style from \"./Users.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nlet User = (props) => {\r\n  let user = props.user;\r\n  return (\r\n    // {/* <button onClick={this.getUsers}>Get Users</button> */}\r\n    <div className={style.usersList}>\r\n      <div>\r\n        <NavLink to={\"/profile/\" + user.id}>\r\n          <img\r\n            className={style.userPhoto}\r\n            alt=\"\"\r\n            src={\r\n              user.photos.small != null\r\n                ? user.photos.small\r\n                : \"https://www.svgrepo.com/show/446479/avatar.svg\"\r\n            }\r\n          />\r\n        </NavLink>\r\n      </div>\r\n      <div>\r\n        {user.name}\r\n        {\" - \"}\r\n        {user.id}\r\n      </div>\r\n      <div>{user.status != null ? user.status : \"Empty now :(\"}</div>\r\n      <div className={style.followCheck}>\r\n        {user.followed ? (\r\n          <button\r\n            className={style.followBtn}\r\n            disabled={props.followingInProgress.some((id) => id === user.id)}\r\n            onClick={() => {\r\n              props.unfollow(user.id);\r\n              // props.togglefollowingInProgress(true, user.id);\r\n              // usersAPI.unfollow(user.id).then((data) => {\r\n              //   if (data.resultCode === 0) {\r\n              //     props.unfollow(user.id);\r\n              //   }\r\n              //   props.togglefollowingInProgress(false, user.id);\r\n              // });\r\n            }}\r\n          >\r\n            Unfollow\r\n          </button>\r\n        ) : (\r\n          <button\r\n            className={style.unfollowBtn}\r\n            disabled={props.followingInProgress.some((id) => id === user.id)}\r\n            onClick={() => {\r\n              props.follow(user.id);\r\n            }}\r\n          >\r\n            Follow\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default User;\r\n","import React from \"react\";\r\nimport style from \"./Users.module.css\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = (props) => {\r\n  return (\r\n    <div className={style.userBody}>\r\n      <Paginator {...props} key={null} maxSize={100} />\r\n\r\n      {props.users.map((user) => (\r\n        <User\r\n          followingInProgress={props.followingInProgress}\r\n          follow={props.follow}\r\n          unfollow={props.unfollow}\r\n          user={user}\r\n          key={user.id}\r\n          // {...props}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default Users;\r\n","import { createSelectorHook } from \"react-redux\";\r\n\r\n// PRIMITIVE SELECTORS\r\nexport const getUsers = (state) => state.usersPage.users;\r\n// код ниже будет создавать новый массив и будет постоянно срабатывать перерисовка в mapstatetoprops\r\n//export const getUsers = (state) => state.usersPage.users.filter(u=>true)\r\nexport const getPageSize = (state) => state.usersPage.pageSize;\r\nexport const getTotalUsersCount = (state) => state.usersPage.totalUsersCount;\r\nexport const getCurrentPage = (state) => state.usersPage.currentPage;\r\nexport const getIsFetching = (state) => state.usersPage.isFetching;\r\nexport const getFollowingInProgress = (state) =>\r\n  state.usersPage.followingInProgress;\r\n//\r\n// надо разобраться как работает через хуки\r\n// const getUsersSelector = (state) => state.usersPage.users;\r\n// export const getUsers = createSelectorHook((getUsersSelector, users) => {\r\n//   users.filter((users) => true);\r\n// });\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  follow,\r\n  requestUsers,\r\n  setCurrentPage,\r\n  unfollow,\r\n} from \"../../redux/usersReducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport { compose } from \"redux\";\r\nimport {\r\n  getCurrentPage,\r\n  getFollowingInProgress,\r\n  getIsFetching,\r\n  getPageSize,\r\n  getTotalUsersCount,\r\n  getUsers,\r\n} from \"../../redux/usersSelectors\";\r\n\r\nclass UsersAPIComponent extends React.Component {\r\n  componentDidMount() {\r\n    let { currentPage, pageSize } = this.props;\r\n    this.props.requestUsers(currentPage, pageSize);\r\n  }\r\n  // наследуемся от родит класса, иначе по умолчанию наследование идет\r\n  // constructor(props) {\r\n  //   super(props);\r\n  // }\r\n  // getUsers = () => {\r\n  //   if (this.props.users.length === 0) {\r\n  //     axios\r\n  //       .get(\"https://social-network.samuraijs.com/api/1.0/users\")\r\n  //       .then((response) => {\r\n  //         this.props.setUsers(response.data.items);\r\n  //       });\r\n  //   }\r\n  // };\r\n  // ________________________________________________________________________________\r\n  // до появления thunk\r\n  //   console.log(\"componentDidMount\");\r\n  //   this.props.toggleIsFetching(true);\r\n\r\n  //   usersAPI\r\n  //     .getUsers(this.props.currentPage, this.props.pageSize)\r\n  //     .then((data) => {\r\n  //       this.props.toggleIsFetching(false);\r\n  //       let userList = data.items;\r\n  //       let totalUsersCount = data.totalCount;\r\n  //       this.props.setUsers(userList);\r\n  //       this.props.setTotalUsersCount(totalUsersCount);\r\n  //       // console.log(\"componentDidMount\", response);\r\n  //       // console.log(\"data\", data);\r\n  //     });\r\n  // }\r\n  onPageChanged = (pageNumberEvent) => {\r\n    let { pageSize } = this.props;\r\n    this.props.requestUsers(pageNumberEvent, pageSize);\r\n    // this.props.toggleIsFetching(true);\r\n    // this.props.setCurrentPage(pageNumberEvent);\r\n    // usersAPI.getUsers(pageNumberEvent, this.props.pageSize).then((data) => {\r\n    //   this.props.toggleIsFetching(false);\r\n    //   this.props.setUsers(data.items);\r\n    // });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.isFetching ? <Preloader /> : null}\r\n        <Users\r\n          totalUsersCount={this.props.totalUsersCount}\r\n          pageSize={this.props.pageSize}\r\n          currentPage={this.props.currentPage}\r\n          users={this.props.users}\r\n          follow={this.props.follow}\r\n          unfollow={this.props.unfollow}\r\n          onPageChanged={this.onPageChanged}\r\n          followingInProgress={this.props.followingInProgress}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    users: getUsers(state), // before ADD SELECTORS users: state.usersPage.users,\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state),\r\n  };\r\n};\r\nlet mapDispatchToProps = {\r\n  follow,\r\n  unfollow,\r\n  setCurrentPage,\r\n  requestUsers,\r\n};\r\n// export default withAuthRedirect(\r\n//   connect(mapStateToProps, mapDispatchToProps)(UsersAPIComponent)\r\n// );\r\nexport default compose(\r\n  // withAuthRedirect, // добавляем защиту аутентификации\r\n  connect(mapStateToProps, mapDispatchToProps)\r\n)(UsersAPIComponent);\r\n\r\n// let withRedirect = withAuthRedirect(UsersAPIComponent);\r\n// export default connect(mapStateToProps, mapDispatchToProps)(withRedirect);\r\n\r\n// let mapDispatchToProps = (dispatch = null) => {\r\n//   return {\r\n//     follow: (userId) => {dispatch(followAC(userId));},\r\n//     unfollow: (userId) => {dispatch(unfollowAC(userId));},\r\n//     setUsers: (users) => {dispatch(setUsersAC(users));},\r\n//     setCurrentPage: (currentPage) => {dispatch(setCurrentPageAC(currentPage));},\r\n//     setTotalUsersCount: (totalUsersCount) => {dispatch(setTotalUsersCountAC(totalUsersCount));},\r\n//     toggleIsFetching: (isFetching) => {dispatch(toggleIsFetchingAC(isFetching));},\r\n//   };};\r\n// ------------------->\r\n// let mapDispatchToProps = {\r\n//   follow: followAC,\r\n//   unfollow: unfollowAC,\r\n//   setUsers: setUsersAC,\r\n//   setCurrentPage: setCurrentPageAC,\r\n//   setTotalUsersCount: setTotalUsersCountAC,\r\n//   toggleIsFetching: toggleIsFetchingAC,\r\n// };\r\n"],"names":["props","totalItemsCount","totalUsersCount","portionSize","Math","max","pageSize","pagesUpload","ceil","portionCount","min","maxSize","portionNumber","setPortionNumber","useState","leftPortion","rightPortion","pages","i","push","_jsxs","className","style","children","_jsx","onClick","filter","page","map","currentPage","event_obrabotchik","onPageChanged","user","usersList","NavLink","to","id","userPhoto","alt","src","photos","small","name","status","followCheck","followed","followBtn","disabled","followingInProgress","some","unfollow","unfollowBtn","follow","userBody","_createElement","Paginator","key","users","User","getUsers","state","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","UsersAPIComponent","React","constructor","arguments","pageNumberEvent","this","requestUsers","componentDidMount","render","_Fragment","Preloader","Users","mapDispatchToProps","setCurrentPage","compose","connect"],"sourceRoot":""}
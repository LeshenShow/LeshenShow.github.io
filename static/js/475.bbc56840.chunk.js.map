{"version":3,"file":"static/js/475.bbc56840.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/Profile.module.css?b512","webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/NewPost/NewPost.jsx","components/Profile/MyPosts/NewPost/NewPostContainer.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","webpack://my-app/./src/components/common/FormsControls/FormsControls.module.css?eb50","components/common/FormsControls/FormsControls.jsx","hoc/withAuthRedirect.jsx","utils/validators/validators.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profile_img\":\"Profile_profile_img__-qF8E\"};","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__POzGZ\",\"avatar\":\"ProfileInfo_avatar__9DUCy\",\"description\":\"ProfileInfo_description__Drajh\",\"status\":\"ProfileInfo_status__rEOSz\"};","import React from \"react\";\r\nimport style from \"../ProfileInfo.module.css\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\n// let arr = [true, () => {}];\r\n// let [a, setA] = arr;\r\n\r\nconst ProfileStatus = (props) => {\r\n  // let stateWithSetState = useState(false); // [false, function]\r\n  // let editMode = stateWithSetState[0];\r\n  // let setEditMode = stateWithSetState[1];\r\n  let [editMode, setEditMode] = useState(false); // [false, function]\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n  const onStatusChange = (element) => {\r\n    setStatus(element.currentTarget.value);\r\n  };\r\n  const [count, setCount] = useState(0);\r\n  return (\r\n    <div>\r\n      {/* если не эдит мод, то */}\r\n      {!editMode && (\r\n        <div>\r\n          <span className={style.status} onDoubleClick={activateEditMode}>\r\n            {props.status || \"---------\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            className={style.status}\r\n            onChange={onStatusChange}\r\n            onBlur={deactivateEditMode}\r\n            value={status}\r\n            autoFocus={true}\r\n          ></input>\r\n        </div>\r\n      )}\r\n      <div>\r\n        <p>You clicked {count} times</p>\r\n        <button onClick={() => setCount(count + 1)}>Click me</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatus;\r\n","import React from \"react\";\r\nimport style from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\r\n\r\nconst ProfileInfo = (props) => {\r\n  console.log(\"ProfileInfo\", props);\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  let photoSrc =\r\n    props.profile.photos.small === null\r\n      ? \"https://www.svgrepo.com/show/416527/animal-bird-cartoon.svg\"\r\n      : props.profile.photos.small;\r\n\r\n  return (\r\n    <div>\r\n      <div className={style.descriptionBlock}>\r\n        <div className={style.description}>{props.profile.fullName}</div>\r\n        <img className={style.avatar} src={photoSrc} alt=\"error\" />\r\n      </div>\r\n      <ProfileStatus status={props.status} updateStatus={props.updateStatus} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n// profile :\r\n//  aboutMe: \"я круто чувак 1001%\"\r\n//  contacts: {\r\n//    facebook: 'facebook.com',\r\n//    website: null,\r\n//    vk: 'vk.com/dimych',\r\n//    twitter: 'https://twitter.com/@sdf',\r\n//    instagram: 'instagram.com/sds', …\r\n//    }\r\n// fullName: \"samurai dimych\"s\r\n// lookingForAJob:true\r\n// lookingForAJobDescription:\"не ищу, а дурачусь\"\r\n// photos:{\r\n//  small: 'https://social-network.samuraijs.com/activecontent/images/users/2/user-small.jpg?v=0',\r\n//  large: 'https://social-network.samuraijs.com/activecontent/images/users/2/user.jpg?v=0'\r\n//  }\r\n// userId: 2\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__b-rK6\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__PWNiI\",\"photo\":\"Post_photo__7BlHi\",\"buttonLike\":\"Post_buttonLike__isLLx\",\"likes\":\"Post_likes__y0vpj\"};","import React from \"react\";\r\nimport style from \"./Post.module.css\";\r\nconst Post = (props) => {\r\n  // debugger;\r\n  // console.log(props.message)\r\n  return (\r\n    <div className={style.item}>\r\n      <div className={style.photo}>\r\n        <img\r\n          alt=\"\"\r\n          src=\"https://www.svgrepo.com/show/416527/animal-bird-cartoon.svg\"\r\n        ></img>\r\n      </div>\r\n      <div className={style.message}>\r\n        <div>{props.message}</div>\r\n        <div className={style.likes}>\r\n          <button className={style.buttonLike}>\r\n            <img\r\n              alt=\"\"\r\n              src=\"https://www.svgrepo.com/show/474892/like-placeholder.svg\"\r\n            ></img>\r\n            <span>{props.likes}</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport style from \"./NewPost.module.css\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { validators } from \"../../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../../common/FormsControls/FormsControls\";\r\nconst NewPost = (props) => {\r\n  const addNewPost = (formData) => {\r\n    props.addPost(formData.newPostBody);\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h3>New post</h3>\r\n      </div>\r\n\r\n      <NewPostReduxForm onSubmit={addNewPost} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst NewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          placeholder={\"Write a new post...\"}\r\n          name={\"newPostBody\"}\r\n          validate={[\r\n            validators.required,\r\n            validators.maxLength15,\r\n            validators.minLength2,\r\n          ]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nconst NewPostReduxForm = reduxForm({\r\n  form: \"newPost\", // unique name for the form\r\n})(NewPostForm);\r\nexport default NewPost;\r\n","import React from \"react\";\r\nimport { addPostActionCreator } from \"../../../../redux/profileReducer\";\r\nimport NewPost from \"./NewPost\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profilePage: state.profilePage,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostBody) => {\r\n      dispatch(addPostActionCreator(newPostBody));\r\n    },\r\n  };\r\n};\r\n\r\nconst NewPostContainer = connect(mapStateToProps, mapDispatchToProps)(NewPost);\r\n\r\nexport default NewPostContainer;\r\n","import React from \"react\";\r\nimport style from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport NewPostContainer from \"./NewPost/NewPostContainer\";\r\n// in class React.PureComponent\r\n// PureComponent автоматически  применяет метод shouldComponentUpdate\r\n// можно запретить компоненте перерисовываться принудительно\r\n// shouldComponentUpdate(nextProps, nextState) {\r\n//   return nextProps !== this.props || nextState !== this.state}\r\nconst MyPosts = React.memo((props) => {\r\n  console.log(\"render\");\r\n  let postItem = props.postData.map((post) => (\r\n    <Post message={post.message} likes={post.likes} key={post.id} />\r\n  ));\r\n  return (\r\n    <div className={style.postsBlock}>\r\n      <NewPostContainer />\r\n      {postItem}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default MyPosts;\r\n\r\n// const MyPosts = (props) => {\r\n//   // debugger;\r\n//   console.log(\"MyPosts\", props);\r\n//   let postItem = props.postData.map((post) => (\r\n//     <Post message={post.message} likes={post.likes} key={post.id} />\r\n//   ));\r\n//   return (\r\n//     <div className={style.postsBlock}>\r\n//       <NewPostContainer />\r\n//       {postItem}\r\n//     </div>\r\n//   );\r\n// };\r\n","import React from \"react\";\r\nimport style from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { connect } from \"react-redux\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return { postData: state.profilePage.postData };\r\n};\r\nlet mapDispatchToProps = (dispatch = null) => {\r\n  return {};\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport style from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n  // console.log('Profile', props);\r\n  // debugger\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <MyPostsContainer\r\n      // state_test={props.store}\r\n      // posts={props.profilePage}\r\n      // dispatch={props.dispatch}\r\n      // newPostText={props.profilePage.newPostText}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getStatus,\r\n  getUserProfile,\r\n  updateStatus,\r\n} from \"../../redux/profileReducer\";\r\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.router.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      //  kпохая практика лучше делать это в рендере  а еще лучше чтобы стейт делал редирект\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    console.log(\"componentDidMount Props\", this.props);\r\n    this.props.getUserProfile(userId); // console.log(\"componentDidMount Response\", response);// console.log(\"data\", data);\r\n    this.props.getStatus(userId);\r\n  }\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nfunction withRouter(Component) {\r\n  function ComponentWithRouterProp(props) {\r\n    let location = useLocation();\r\n    let navigate = useNavigate();\r\n    let params = useParams();\r\n    return <Component {...props} router={{ location, navigate, params }} />;\r\n  }\r\n  return ComponentWithRouterProp;\r\n}\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  isAuth: state.auth.isAuth,\r\n  authorizedUserId: state.auth.userId,\r\n});\r\nlet mapDispatchToProps = { getUserProfile, getStatus, updateStatus };\r\n\r\n// let withUrlDataContainerComponent = withRouter(ProfileContainer);\r\n// export default connect(\r\n//   mapStateToProps,\r\n//   mapDispatchToProps\r\n// )(withUrlDataContainerComponent);\r\n\r\n// сломалось? поставил на паузу проверку аутентификации\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n// let withUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\nexport default compose(\r\n  withRouter,\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n// долгий вараиант\r\n// compose(\r\n//   connect(mapStateToProps, mapDispatchToProps),\r\n//   withUrlDataContainerComponent,\r\n//   withAuthRedirect\r\n// )(ProfileContainer);\r\n// export default connect(\r\n//   mapStateToProps,\r\n//   mapDispatchToProps\r\n// )(withUrlDataContainerComponent);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__DjFsL\",\"error_input\":\"FormsControls_error_input__IPVIy\",\"error\":\"FormsControls_error__GiRUL\"};","import React from \"react\";\r\nimport style from \"./FormsControls.module.css\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { validators } from \"../../../utils/validators/validators\";\r\n\r\nexport const FormControl = ({ input, meta, child, element, ...props }) => {\r\n  const hasError = meta.touched && meta.error;\r\n  return (\r\n    <div className={style.formControl + \" \" + (hasError ? style.error : \"\")}>\r\n      <div>{props.children}</div>\r\n      {hasError && <span>{meta.error}</span>}\r\n    </div>\r\n  );\r\n};\r\nexport const Textarea = (props) => {\r\n  const { input, meta, child, element, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <textarea {...input} {...restProps} />\r\n      {/* типа остаточные пропсы рестпропс? сделали костыль в 77 уроке */}\r\n    </FormControl>\r\n  );\r\n};\r\nexport const Input = (props) => {\r\n  const { input, meta, child, element, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <input {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const createFieldManual = (component, name, props = {}) => (\r\n  <div>\r\n    <Field component={component} name={name} {...props} />\r\n    {props.text}\r\n  </div>\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n// export let AuthRedirectComponent = (props) => {\r\n//   if (!this.props.isAuth) {\r\n//     return <Navigate to={\"/login\"} />;\r\n//   }\r\n//   return <Component {...props} />;\r\n// };\r\nlet mapStateToPropsForRedirect = (state) => ({ isAuth: state.auth.isAuth });\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Navigate to={\"/login\"} />;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","export const validators = {\r\n  required(value) {\r\n    if (value) return undefined;\r\n    return \"error message\";\r\n  },\r\n  maxLength15(value) {\r\n    if (value && value.length > 15) return \"Max length is 15 symbols\";\r\n    return undefined;\r\n  },\r\n  minLength2(value) {\r\n    if (value && value.length < 2) return \"Min length is 2 symbols\";\r\n    return undefined;\r\n  },\r\n  //   maxLengthCreator: (maxLength) => (value) => {\r\n  //     if (value && value.length > maxLength)\r\n  //       return `Max length is ${maxLength} symbols`;\r\n  //     return undefined;\r\n  //   },\r\n  //   minLengthCreator: (minLength) => (value) => {\r\n  //     if (value && value.length < minLength)\r\n  //       return `Min length is ${minLength} symbols`;\r\n  //     return undefined;\r\n  //   },\r\n};\r\n"],"names":["props","editMode","setEditMode","useState","status","setStatus","useEffect","count","setCount","_jsxs","children","_jsx","className","style","onDoubleClick","activateEditMode","onChange","element","currentTarget","value","onBlur","deactivateEditMode","updateStatus","autoFocus","onClick","console","log","profile","Preloader","photoSrc","photos","small","fullName","src","alt","ProfileStatus","item","photo","message","likes","buttonLike","NewPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","name","validate","validators","required","maxLength15","minLength2","formData","addPost","newPostBody","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","NewPost","React","postItem","postData","map","post","Post","id","NewPostContainer","MyPosts","ProfileInfo","MyPostsContainer","ProfileContainer","componentDidMount","userId","this","router","params","authorizedUserId","history","push","getUserProfile","getStatus","render","Profile","mapDispatchToProps","compose","Component","location","useLocation","navigate","useNavigate","useParams","isAuth","auth","withAuthRedirect","FormControl","_ref","input","meta","child","hasError","touched","error","restProps","Input","createFieldManual","arguments","length","undefined","text","mapStateToPropsForRedirect","RedirectComponent","Navigate","to"],"sourceRoot":""}
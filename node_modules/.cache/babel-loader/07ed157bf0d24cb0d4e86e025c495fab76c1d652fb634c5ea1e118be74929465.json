{"ast":null,"code":"import { profileAPI } from \"../api/api\";\nconst ADD_POST = \"ADD-POST\";\n// const UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\nconst SET_STATUS = \"SET_STATUS\";\nconst DELETE_POST = \"DELETE_POST\";\n// STATE\nlet initialState = {\n  postData: [{\n    id: 0,\n    message: \"Hi, how are u?\",\n    likes: 10\n  }, {\n    id: 1,\n    message: \"It's my first post\",\n    likes: 15\n  }, {\n    id: 2,\n    message: \"It's my second post\",\n    likes: 115\n  }, {\n    id: 3,\n    message: \"Excepteur do aliqua laborum sit aliqua do quis adipisicing cupidatat incididunt reprehenderit cupidatat voluptate irure. Laboris in occaecat qui consectetur cupidatat minim nulla do id amet. Deserunt deserunt ex veniam ex esse. Magna laborum occaecat id tempor et dolore officia et enim tempor excepteur velit ea. Et exercitation id quis quis commodo sunt et dolor ad ullamco laborum.\",\n    likes: 20\n  }, {\n    id: 4,\n    message: \"Excepteur do aliqua laborum sit aliqua do quis adipisicing cupidatat incididunt reprehenderit cupidatat voluptate irure. Laboris in occaecat qui consectetur cupidatat minim nulla do id amet. Deserunt deserunt ex veniam ex esse. Magna laborum occaecat id tempor et dolore officia et enim tempor excepteur velit ea. Et exercitation id quis quis commodo sunt et dolor ad ullamco laborum.\",\n    likes: 30\n  }, {\n    id: 5,\n    message: \"Excepteur do aliqua laborum sit aliqua do quis adipisicing cupidatat incididunt reprehenderit cupidatat voluptate irure. Laboris in occaecat qui consectetur cupidatat minim nulla do id amet. Deserunt deserunt ex veniam ex esse. Magna laborum occaecat id tempor et dolore officia et enim tempor excepteur velit ea. Et exercitation id quis quis commodo sunt et dolor ad ullamco laborum.\",\n    likes: 40\n  }],\n  profile: null,\n  status: \"\"\n};\n// HANDLER\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      // чтобы была перерисовка нужно сделать копию объекта, иначе коннект не увидит разницу в изменении массива т.к. даже если массив изменился, то он остался тем же самым объектом\n      let newPost = {\n        id: 100,\n        message: action.newPostBody,\n        likes: 0\n      };\n      return {\n        ...state,\n        postData: [newPost, ...state.postData]\n      };\n    // case UPDATE_NEW_POST_TEXT:\n    //   return { ...state, newPostText: action.newText };\n    case SET_USER_PROFILE:\n      return {\n        ...state,\n        profile: action.profile\n      };\n    case SET_STATUS:\n      return {\n        ...state,\n        status: action.status\n      };\n    case DELETE_POST:\n      return {\n        ...state,\n        postData: state.postData.filter(p => p.id !== action.postId)\n      };\n    default:\n      break;\n  }\n  return state;\n};\n\n// ACTION CREATORS\nexport const addPostActionCreator = newPostBody => ({\n  type: ADD_POST,\n  newPostBody: newPostBody\n});\n// export const updateNewPostTextActionCreator = (text) => ({\n//   type: UPDATE_NEW_POST_TEXT,\n//   newText: text,\n// });\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile: profile\n});\nexport const setStatus = status => ({\n  type: SET_STATUS,\n  status: status\n});\nexport const deletePost = postId => ({\n  type: DELETE_POST,\n  postId: postId\n});\n// THUNKS\nexport const getUserProfile = userId => async dispatch => {\n  let response = await profileAPI.getUserProfile(userId);\n  dispatch(setUserProfile(response.data));\n};\nexport const getStatus = userId => async dispatch => {\n  let response = await profileAPI.getStatus(userId);\n  dispatch(setStatus(response.data));\n};\nexport const updateStatus = status => async dispatch => {\n  let response = await profileAPI.updateStatus(status);\n  if (response.data.resultCode === 0) {\n    dispatch(setStatus(status));\n  }\n};\nexport default profileReducer;","map":{"version":3,"names":["profileAPI","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","initialState","postData","id","message","likes","profile","status","profileReducer","state","action","type","newPost","newPostBody","filter","p","postId","addPostActionCreator","setUserProfile","setStatus","deletePost","getUserProfile","userId","dispatch","response","data","getStatus","updateStatus","resultCode"],"sources":["C:/Users/Leshen/Desktop/JS/after_courses/react/ZooPlanet/LeshenShow.github.io/src/redux/profileReducer.js"],"sourcesContent":["import { profileAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\n// const UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\nconst DELETE_POST = \"DELETE_POST\";\r\n// STATE\r\nlet initialState = {\r\n  postData: [\r\n    { id: 0, message: \"Hi, how are u?\", likes: 10 },\r\n    { id: 1, message: \"It's my first post\", likes: 15 },\r\n    { id: 2, message: \"It's my second post\", likes: 115 },\r\n    {\r\n      id: 3,\r\n      message:\r\n        \"Excepteur do aliqua laborum sit aliqua do quis adipisicing cupidatat incididunt reprehenderit cupidatat voluptate irure. Laboris in occaecat qui consectetur cupidatat minim nulla do id amet. Deserunt deserunt ex veniam ex esse. Magna laborum occaecat id tempor et dolore officia et enim tempor excepteur velit ea. Et exercitation id quis quis commodo sunt et dolor ad ullamco laborum.\",\r\n      likes: 20,\r\n    },\r\n    {\r\n      id: 4,\r\n      message:\r\n        \"Excepteur do aliqua laborum sit aliqua do quis adipisicing cupidatat incididunt reprehenderit cupidatat voluptate irure. Laboris in occaecat qui consectetur cupidatat minim nulla do id amet. Deserunt deserunt ex veniam ex esse. Magna laborum occaecat id tempor et dolore officia et enim tempor excepteur velit ea. Et exercitation id quis quis commodo sunt et dolor ad ullamco laborum.\",\r\n      likes: 30,\r\n    },\r\n    {\r\n      id: 5,\r\n      message:\r\n        \"Excepteur do aliqua laborum sit aliqua do quis adipisicing cupidatat incididunt reprehenderit cupidatat voluptate irure. Laboris in occaecat qui consectetur cupidatat minim nulla do id amet. Deserunt deserunt ex veniam ex esse. Magna laborum occaecat id tempor et dolore officia et enim tempor excepteur velit ea. Et exercitation id quis quis commodo sunt et dolor ad ullamco laborum.\",\r\n      likes: 40,\r\n    },\r\n  ],\r\n  profile: null,\r\n  status: \"\",\r\n};\r\n// HANDLER\r\nconst profileReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      // чтобы была перерисовка нужно сделать копию объекта, иначе коннект не увидит разницу в изменении массива т.к. даже если массив изменился, то он остался тем же самым объектом\r\n      let newPost = {\r\n        id: 100,\r\n        message: action.newPostBody,\r\n        likes: 0,\r\n      };\r\n      return {\r\n        ...state,\r\n        postData: [newPost, ...state.postData],\r\n      };\r\n    // case UPDATE_NEW_POST_TEXT:\r\n    //   return { ...state, newPostText: action.newText };\r\n    case SET_USER_PROFILE:\r\n      return { ...state, profile: action.profile };\r\n    case SET_STATUS:\r\n      return { ...state, status: action.status };\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        postData: state.postData.filter((p) => p.id !== action.postId),\r\n      };\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n\r\n// ACTION CREATORS\r\nexport const addPostActionCreator = (newPostBody) => ({\r\n  type: ADD_POST,\r\n  newPostBody: newPostBody,\r\n});\r\n// export const updateNewPostTextActionCreator = (text) => ({\r\n//   type: UPDATE_NEW_POST_TEXT,\r\n//   newText: text,\r\n// });\r\nexport const setUserProfile = (profile) => ({\r\n  type: SET_USER_PROFILE,\r\n  profile: profile,\r\n});\r\nexport const setStatus = (status) => ({\r\n  type: SET_STATUS,\r\n  status: status,\r\n});\r\nexport const deletePost = (postId) => ({\r\n  type: DELETE_POST,\r\n  postId: postId,\r\n});\r\n// THUNKS\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n  let response = await profileAPI.getUserProfile(userId);\r\n  dispatch(setUserProfile(response.data));\r\n};\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n  let response = await profileAPI.getStatus(userId);\r\n  dispatch(setStatus(response.data));\r\n};\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n  let response = await profileAPI.updateStatus(status);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setStatus(status));\r\n  }\r\n};\r\nexport default profileReducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import{usersAPI}from\"../api/api\";import{updateObjectInArray}from\"../utils/object-helpers\";const FOLLOW=\"FOLLOW\";const UNFOLLOW=\"UNFOLLOW\";const SET_USERS=\"SET_USERS\";const SET_CURRENT_PAGE=\"SET_CURRENT_PAGE\";const SET_TOTAL_USERS_COUNT=\"SET_TOTAL_USERS_COUNT\";const TOGGLE_IS_FETCHING=\"TOGGLE_IS_FETCHING\";const TOGGLE_IS_FOLLOWING_PROGRESS=\"TOGGLE_IS_FOLLOWING_PROGRESS\";let initialState={users:[],pageSize:4,totalUsersCount:1,currentPage:1,isFetching:true,followingInProgress:[]};const usersReducer=function(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case FOLLOW:return{...state,users:updateObjectInArray(state.users,action.userId,\"id\",{followed:true})// users: state.users.map((user) => {\n//   if (user.id === action.userId) {\n//     return { ...user, followed: true };\n//   }\n//   return user;\n// }),\n// users: [...state.users]\n};case UNFOLLOW:return{...state,users:updateObjectInArray(state.users,action.userId,\"id\",{followed:false})// users: state.users.map((user) => {\n//   if (user.id === action.userId) {\n//     return { ...user, followed: false };\n//   }\n//   return user;\n// }),\n// users: [...state.users]\n};case SET_USERS:{// return { ...state, users: [...state.users, ...action.users] };\nreturn{...state,users:action.users};}case SET_CURRENT_PAGE:{return{...state,currentPage:action.currentPage};}case SET_TOTAL_USERS_COUNT:{return{...state,totalUsersCount:action.totalUsersCount};}case TOGGLE_IS_FETCHING:{return{...state,isFetching:action.isFetching};}case TOGGLE_IS_FOLLOWING_PROGRESS:{return{...state,followingInProgress:action.isFetching?[...state.followingInProgress,action.userId]:state.followingInProgress.filter(id=>id!==action.userId)//фильтрация вернет новый объект массива\n};}default:break;}return state;};export const followSuccess=userId=>({type:FOLLOW,userId});export const unfollowSuccess=userId=>({type:UNFOLLOW,userId});export const setUsers=users=>({type:SET_USERS,users});export const setCurrentPage=currentPage=>({type:SET_CURRENT_PAGE,currentPage});export const setTotalUsersCount=totalUsersCount=>({type:SET_TOTAL_USERS_COUNT,totalUsersCount:totalUsersCount});export const toggleIsFetching=isFetching=>({type:TOGGLE_IS_FETCHING,isFetching});export const toggleFollowingInProgress=(isFetching,userId)=>({type:TOGGLE_IS_FOLLOWING_PROGRESS,isFetching,userId});//ThunkCreator\nexport const requestUsers=(page,pageSize)=>async dispatch=>{dispatch(toggleIsFetching(true));let response=await usersAPI.getUsers(page,pageSize);dispatch(setCurrentPage(page));dispatch(toggleIsFetching(false));dispatch(setUsers(response.data.items));dispatch(setTotalUsersCount(response.data.totalCount));};// Мое решение функционала подписок follow/unfollow. Один экшн и одна санка. Экшн работает по принципу замены значения на противоположное, типа followed = !followed. Санка принимает id юзера и действие в виде строки (подписка или отписка). Принимает там, где вызывается, в компоненте User. Действие зависит от того, что в данный момент в стейте, подписаны или НЕподписаны. Санка подставляет это действие как название метода APIшки, которая и делает нужный запрос в санке. А экшн всегда вызывается один и тот же.\n// export function toggleFollow(id, status) {\n//   return (dispatch) => {\n//     dispatch(isFollow(id, true));\n//     requestAPI[status](id)\n//     .then(data => {\n//       if (data.resultCode === 0) {\n//         dispatch(follow(id));\n//       } else if (data.resultCode === 1) {\n//         console.log(`ERROR: ${data.messages[0]}`);\n//       }\n//       dispatch(isFollow(id, false));\n//     })\n//   }\n// }\nconst followUnfollowFlow=async(dispatch,userId,apiMethod,actionCreator)=>{dispatch(toggleFollowingInProgress(true,userId));let response=await apiMethod(userId);if(response.data.resultCode===0){dispatch(actionCreator(userId));}dispatch(toggleFollowingInProgress(false,userId));};export const follow=userId=>async dispatch=>{let apiMethod=usersAPI.follow.bind(usersAPI);let actionCreator=followSuccess;followUnfollowFlow(dispatch,userId,apiMethod,actionCreator);};export const unfollow=userId=>async dispatch=>{let apiMethod=usersAPI.unfollow.bind(usersAPI);let actionCreator=unfollowSuccess;followUnfollowFlow(dispatch,userId,apiMethod,actionCreator);};export default usersReducer;// refactoring .then to async await\n// export const unfollow2 = (userId) => {\n//   return (dispatch) => {\n//     dispatch(toggleFollowingInProgress(true, userId));\n//     usersAPI.unfollow(userId).then((data) => {\n//       if (data.resultCode === 0) {\n//         dispatch(unfollowSuccess(userId));\n//       }\n//       dispatch(toggleFollowingInProgress(false, userId));\n//     });\n//   };\n// };\n// export const setCurrentPageAC = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage: currentPage});\n//\n// export const updateNewPostTextActionCreator = (text) => ({\n//   type: UPDATE_NEW_POST_TEXT,\n//   newText: text,\n// });\n//-------------------->\n// export const followAC = (userId) => ({ type: FOLLOW, userId });\n// export const unfollowAC = (userId) => ({ type: UNFOLLOW, userId });\n// export const setUsersAC = (users) => ({ type: SET_USERS, users });\n// export const setCurrentPageAC = (currentPage) => ({\n//   type: SET_CURRENT_PAGE,\n//   currentPage,\n// });\n// export const setTotalUsersCountAC = (totalUsersCount) => ({\n//   type: SET_TOTAL_USERS_COUNT,\n//   totalUsersCount: totalUsersCount,\n// });\n// export const toggleIsFetchingAC = (isFetching) => ({\n//   type: TOGGLE_IS_FETCHING,\n//   isFetching,\n// });","map":{"version":3,"names":["usersAPI","updateObjectInArray","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","usersReducer","state","arguments","length","undefined","action","type","userId","followed","filter","id","followSuccess","unfollowSuccess","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","toggleFollowingInProgress","requestUsers","page","dispatch","response","getUsers","data","items","totalCount","followUnfollowFlow","apiMethod","actionCreator","resultCode","follow","bind","unfollow"],"sources":["C:/Users/Leshen/Desktop/JS/after_courses/react/ZooPlanet/LeshenShow.github.io/src/redux/usersReducer.js"],"sourcesContent":["import { usersAPI } from \"../api/api\";\r\nimport { updateObjectInArray } from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 4,\r\n  totalUsersCount: 1,\r\n  currentPage: 1,\r\n  isFetching: true,\r\n  followingInProgress: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, \"id\", {\r\n          followed: true,\r\n        }),\r\n        // users: state.users.map((user) => {\r\n        //   if (user.id === action.userId) {\r\n        //     return { ...user, followed: true };\r\n        //   }\r\n        //   return user;\r\n        // }),\r\n        // users: [...state.users]\r\n      };\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, \"id\", {\r\n          followed: false,\r\n        }),\r\n        // users: state.users.map((user) => {\r\n        //   if (user.id === action.userId) {\r\n        //     return { ...user, followed: false };\r\n        //   }\r\n        //   return user;\r\n        // }),\r\n        // users: [...state.users]\r\n      };\r\n    case SET_USERS: {\r\n      // return { ...state, users: [...state.users, ...action.users] };\r\n      return { ...state, users: action.users };\r\n    }\r\n    case SET_CURRENT_PAGE: {\r\n      return { ...state, currentPage: action.currentPage };\r\n    }\r\n    case SET_TOTAL_USERS_COUNT: {\r\n      return { ...state, totalUsersCount: action.totalUsersCount };\r\n    }\r\n    case TOGGLE_IS_FETCHING: {\r\n      return { ...state, isFetching: action.isFetching };\r\n    }\r\n    case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter((id) => id !== action.userId), //фильтрация вернет новый объект массива\r\n      };\r\n    }\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId });\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId });\r\nexport const setUsers = (users) => ({ type: SET_USERS, users });\r\nexport const setCurrentPage = (currentPage) => ({\r\n  type: SET_CURRENT_PAGE,\r\n  currentPage,\r\n});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({\r\n  type: SET_TOTAL_USERS_COUNT,\r\n  totalUsersCount: totalUsersCount,\r\n});\r\nexport const toggleIsFetching = (isFetching) => ({\r\n  type: TOGGLE_IS_FETCHING,\r\n  isFetching,\r\n});\r\nexport const toggleFollowingInProgress = (isFetching, userId) => ({\r\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n  isFetching,\r\n  userId,\r\n});\r\n//ThunkCreator\r\nexport const requestUsers = (page, pageSize) => async (dispatch) => {\r\n  dispatch(toggleIsFetching(true));\r\n  let response = await usersAPI.getUsers(page, pageSize);\r\n  dispatch(setCurrentPage(page));\r\n  dispatch(toggleIsFetching(false));\r\n  dispatch(setUsers(response.data.items));\r\n  dispatch(setTotalUsersCount(response.data.totalCount));\r\n};\r\n// Мое решение функционала подписок follow/unfollow. Один экшн и одна санка. Экшн работает по принципу замены значения на противоположное, типа followed = !followed. Санка принимает id юзера и действие в виде строки (подписка или отписка). Принимает там, где вызывается, в компоненте User. Действие зависит от того, что в данный момент в стейте, подписаны или НЕподписаны. Санка подставляет это действие как название метода APIшки, которая и делает нужный запрос в санке. А экшн всегда вызывается один и тот же.\r\n\r\n// export function toggleFollow(id, status) {\r\n//   return (dispatch) => {\r\n//     dispatch(isFollow(id, true));\r\n//     requestAPI[status](id)\r\n//     .then(data => {\r\n//       if (data.resultCode === 0) {\r\n//         dispatch(follow(id));\r\n//       } else if (data.resultCode === 1) {\r\n//         console.log(`ERROR: ${data.messages[0]}`);\r\n//       }\r\n//       dispatch(isFollow(id, false));\r\n//     })\r\n//   }\r\n// }\r\nconst followUnfollowFlow = async (\r\n  dispatch,\r\n  userId,\r\n  apiMethod,\r\n  actionCreator\r\n) => {\r\n  dispatch(toggleFollowingInProgress(true, userId));\r\n  let response = await apiMethod(userId);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(actionCreator(userId));\r\n  }\r\n  dispatch(toggleFollowingInProgress(false, userId));\r\n};\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n  let apiMethod = usersAPI.follow.bind(usersAPI);\r\n  let actionCreator = followSuccess;\r\n  followUnfollowFlow(dispatch, userId, apiMethod, actionCreator);\r\n};\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n  let apiMethod = usersAPI.unfollow.bind(usersAPI);\r\n  let actionCreator = unfollowSuccess;\r\n  followUnfollowFlow(dispatch, userId, apiMethod, actionCreator);\r\n};\r\n\r\nexport default usersReducer;\r\n// refactoring .then to async await\r\n\r\n// export const unfollow2 = (userId) => {\r\n//   return (dispatch) => {\r\n//     dispatch(toggleFollowingInProgress(true, userId));\r\n//     usersAPI.unfollow(userId).then((data) => {\r\n//       if (data.resultCode === 0) {\r\n//         dispatch(unfollowSuccess(userId));\r\n//       }\r\n//       dispatch(toggleFollowingInProgress(false, userId));\r\n//     });\r\n//   };\r\n// };\r\n\r\n// export const setCurrentPageAC = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage: currentPage});\r\n//\r\n// export const updateNewPostTextActionCreator = (text) => ({\r\n//   type: UPDATE_NEW_POST_TEXT,\r\n//   newText: text,\r\n// });\r\n//-------------------->\r\n// export const followAC = (userId) => ({ type: FOLLOW, userId });\r\n// export const unfollowAC = (userId) => ({ type: UNFOLLOW, userId });\r\n// export const setUsersAC = (users) => ({ type: SET_USERS, users });\r\n// export const setCurrentPageAC = (currentPage) => ({\r\n//   type: SET_CURRENT_PAGE,\r\n//   currentPage,\r\n// });\r\n// export const setTotalUsersCountAC = (totalUsersCount) => ({\r\n//   type: SET_TOTAL_USERS_COUNT,\r\n//   totalUsersCount: totalUsersCount,\r\n// });\r\n// export const toggleIsFetchingAC = (isFetching) => ({\r\n//   type: TOGGLE_IS_FETCHING,\r\n//   isFetching,\r\n// });\r\n"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,YAAY,CACrC,OAASC,mBAAmB,KAAQ,yBAAyB,CAE7D,KAAM,CAAAC,MAAM,CAAG,QAAQ,CACvB,KAAM,CAAAC,QAAQ,CAAG,UAAU,CAC3B,KAAM,CAAAC,SAAS,CAAG,WAAW,CAC7B,KAAM,CAAAC,gBAAgB,CAAG,kBAAkB,CAC3C,KAAM,CAAAC,qBAAqB,CAAG,uBAAuB,CACrD,KAAM,CAAAC,kBAAkB,CAAG,oBAAoB,CAC/C,KAAM,CAAAC,4BAA4B,CAAG,8BAA8B,CAEnE,GAAI,CAAAC,YAAY,CAAG,CACjBC,KAAK,CAAE,EAAE,CACTC,QAAQ,CAAE,CAAC,CACXC,eAAe,CAAE,CAAC,CAClBC,WAAW,CAAE,CAAC,CACdC,UAAU,CAAE,IAAI,CAChBC,mBAAmB,CAAE,EACvB,CAAC,CAED,KAAM,CAAAC,YAAY,CAAG,QAAAA,CAAA,CAAkC,IAAjC,CAAAC,KAAK,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAGT,YAAY,IAAE,CAAAY,MAAM,CAAAH,SAAA,CAAAC,MAAA,GAAAD,SAAA,IAAAE,SAAA,CAChD,OAAQC,MAAM,CAACC,IAAI,EACjB,IAAK,CAAApB,MAAM,CACT,MAAO,CACL,GAAGe,KAAK,CACRP,KAAK,CAAET,mBAAmB,CAACgB,KAAK,CAACP,KAAK,CAAEW,MAAM,CAACE,MAAM,CAAE,IAAI,CAAE,CAC3DC,QAAQ,CAAE,IACZ,CAAC,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACF,CAAC,CACH,IAAK,CAAArB,QAAQ,CACX,MAAO,CACL,GAAGc,KAAK,CACRP,KAAK,CAAET,mBAAmB,CAACgB,KAAK,CAACP,KAAK,CAAEW,MAAM,CAACE,MAAM,CAAE,IAAI,CAAE,CAC3DC,QAAQ,CAAE,KACZ,CAAC,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACF,CAAC,CACH,IAAK,CAAApB,SAAS,CAAE,CACd;AACA,MAAO,CAAE,GAAGa,KAAK,CAAEP,KAAK,CAAEW,MAAM,CAACX,KAAM,CAAC,CAC1C,CACA,IAAK,CAAAL,gBAAgB,CAAE,CACrB,MAAO,CAAE,GAAGY,KAAK,CAAEJ,WAAW,CAAEQ,MAAM,CAACR,WAAY,CAAC,CACtD,CACA,IAAK,CAAAP,qBAAqB,CAAE,CAC1B,MAAO,CAAE,GAAGW,KAAK,CAAEL,eAAe,CAAES,MAAM,CAACT,eAAgB,CAAC,CAC9D,CACA,IAAK,CAAAL,kBAAkB,CAAE,CACvB,MAAO,CAAE,GAAGU,KAAK,CAAEH,UAAU,CAAEO,MAAM,CAACP,UAAW,CAAC,CACpD,CACA,IAAK,CAAAN,4BAA4B,CAAE,CACjC,MAAO,CACL,GAAGS,KAAK,CACRF,mBAAmB,CAAEM,MAAM,CAACP,UAAU,CAClC,CAAC,GAAGG,KAAK,CAACF,mBAAmB,CAAEM,MAAM,CAACE,MAAM,CAAC,CAC7CN,KAAK,CAACF,mBAAmB,CAACU,MAAM,CAAEC,EAAE,EAAKA,EAAE,GAAKL,MAAM,CAACE,MAAM,CAAG;AACtE,CAAC,CACH,CACA,QACE,MACJ,CACA,MAAO,CAAAN,KAAK,CACd,CAAC,CAED,MAAO,MAAM,CAAAU,aAAa,CAAIJ,MAAM,GAAM,CAAED,IAAI,CAAEpB,MAAM,CAAEqB,MAAO,CAAC,CAAC,CACnE,MAAO,MAAM,CAAAK,eAAe,CAAIL,MAAM,GAAM,CAAED,IAAI,CAAEnB,QAAQ,CAAEoB,MAAO,CAAC,CAAC,CACvE,MAAO,MAAM,CAAAM,QAAQ,CAAInB,KAAK,GAAM,CAAEY,IAAI,CAAElB,SAAS,CAAEM,KAAM,CAAC,CAAC,CAC/D,MAAO,MAAM,CAAAoB,cAAc,CAAIjB,WAAW,GAAM,CAC9CS,IAAI,CAAEjB,gBAAgB,CACtBQ,WACF,CAAC,CAAC,CACF,MAAO,MAAM,CAAAkB,kBAAkB,CAAInB,eAAe,GAAM,CACtDU,IAAI,CAAEhB,qBAAqB,CAC3BM,eAAe,CAAEA,eACnB,CAAC,CAAC,CACF,MAAO,MAAM,CAAAoB,gBAAgB,CAAIlB,UAAU,GAAM,CAC/CQ,IAAI,CAAEf,kBAAkB,CACxBO,UACF,CAAC,CAAC,CACF,MAAO,MAAM,CAAAmB,yBAAyB,CAAGA,CAACnB,UAAU,CAAES,MAAM,IAAM,CAChED,IAAI,CAAEd,4BAA4B,CAClCM,UAAU,CACVS,MACF,CAAC,CAAC,CACF;AACA,MAAO,MAAM,CAAAW,YAAY,CAAGA,CAACC,IAAI,CAAExB,QAAQ,GAAK,KAAO,CAAAyB,QAAQ,EAAK,CAClEA,QAAQ,CAACJ,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAChC,GAAI,CAAAK,QAAQ,CAAG,KAAM,CAAArC,QAAQ,CAACsC,QAAQ,CAACH,IAAI,CAAExB,QAAQ,CAAC,CACtDyB,QAAQ,CAACN,cAAc,CAACK,IAAI,CAAC,CAAC,CAC9BC,QAAQ,CAACJ,gBAAgB,CAAC,KAAK,CAAC,CAAC,CACjCI,QAAQ,CAACP,QAAQ,CAACQ,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC,CAAC,CACvCJ,QAAQ,CAACL,kBAAkB,CAACM,QAAQ,CAACE,IAAI,CAACE,UAAU,CAAC,CAAC,CACxD,CAAC,CACD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAM,CAAAC,kBAAkB,CAAG,KAAAA,CACzBN,QAAQ,CACRb,MAAM,CACNoB,SAAS,CACTC,aAAa,GACV,CACHR,QAAQ,CAACH,yBAAyB,CAAC,IAAI,CAAEV,MAAM,CAAC,CAAC,CACjD,GAAI,CAAAc,QAAQ,CAAG,KAAM,CAAAM,SAAS,CAACpB,MAAM,CAAC,CACtC,GAAIc,QAAQ,CAACE,IAAI,CAACM,UAAU,GAAK,CAAC,CAAE,CAClCT,QAAQ,CAACQ,aAAa,CAACrB,MAAM,CAAC,CAAC,CACjC,CACAa,QAAQ,CAACH,yBAAyB,CAAC,KAAK,CAAEV,MAAM,CAAC,CAAC,CACpD,CAAC,CAED,MAAO,MAAM,CAAAuB,MAAM,CAAIvB,MAAM,EAAK,KAAO,CAAAa,QAAQ,EAAK,CACpD,GAAI,CAAAO,SAAS,CAAG3C,QAAQ,CAAC8C,MAAM,CAACC,IAAI,CAAC/C,QAAQ,CAAC,CAC9C,GAAI,CAAA4C,aAAa,CAAGjB,aAAa,CACjCe,kBAAkB,CAACN,QAAQ,CAAEb,MAAM,CAAEoB,SAAS,CAAEC,aAAa,CAAC,CAChE,CAAC,CACD,MAAO,MAAM,CAAAI,QAAQ,CAAIzB,MAAM,EAAK,KAAO,CAAAa,QAAQ,EAAK,CACtD,GAAI,CAAAO,SAAS,CAAG3C,QAAQ,CAACgD,QAAQ,CAACD,IAAI,CAAC/C,QAAQ,CAAC,CAChD,GAAI,CAAA4C,aAAa,CAAGhB,eAAe,CACnCc,kBAAkB,CAACN,QAAQ,CAAEb,MAAM,CAAEoB,SAAS,CAAEC,aAAa,CAAC,CAChE,CAAC,CAED,cAAe,CAAA5B,YAAY,CAC3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Leshen\\\\Desktop\\\\JS\\\\after_courses\\\\react\\\\ZooPlanet\\\\LeshenShow.github.io\\\\src\\\\components\\\\common\\\\Paginator\\\\Paginator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport style from \"./Paginator.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet Paginator = (props, {\n  maxSize = 150\n}) => {\n  _s();\n  let totalItemsCount = props.totalUsersCount;\n  let portionSize = props.pageSize;\n  let pagesUpload = Math.ceil(totalItemsCount / portionSize);\n  let pagesCount = Math.min(pagesUpload, maxSize);\n  console.log(pagesUpload);\n  console.log(pagesCount);\n  let [portionNumber, setPortionNumber] = useState(1);\n  let leftPortion = (portionNumber - 1) * portionSize + 1;\n  let rightPortion = portionNumber * portionSize;\n  const pages = [];\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.pageList,\n    children: pages.filter(page => page >= leftPortion && page <= rightPortion).map(page => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: props.currentPage === page && style.selectedPage,\n        onClick: event_obrabotchik => {\n          props.onPageChanged(page);\n        },\n        children: page\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(Paginator, \"8p8zb1vvZvsuWyQQS16DuuzsJLU=\");\n_c = Paginator;\nexport default Paginator;\nvar _c;\n$RefreshReg$(_c, \"Paginator\");","map":{"version":3,"names":["React","useState","style","jsxDEV","_jsxDEV","Paginator","props","maxSize","_s","totalItemsCount","totalUsersCount","portionSize","pageSize","pagesUpload","Math","ceil","pagesCount","min","console","log","portionNumber","setPortionNumber","leftPortion","rightPortion","pages","i","push","className","pageList","children","filter","page","map","currentPage","selectedPage","onClick","event_obrabotchik","onPageChanged","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Leshen/Desktop/JS/after_courses/react/ZooPlanet/LeshenShow.github.io/src/components/common/Paginator/Paginator.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport style from \"./Paginator.module.css\";\r\n\r\nlet Paginator = (props, { maxSize = 150 }) => {\r\n  let totalItemsCount = props.totalUsersCount;\r\n  let portionSize = props.pageSize;\r\n  let pagesUpload = Math.ceil(totalItemsCount / portionSize);\r\n  let pagesCount = Math.min(pagesUpload, maxSize);\r\n  console.log(pagesUpload);\r\n  console.log(pagesCount);\r\n  let [portionNumber, setPortionNumber] = useState(1);\r\n  let leftPortion = (portionNumber - 1) * portionSize + 1;\r\n  let rightPortion = portionNumber * portionSize;\r\n\r\n  const pages = [];\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  return (\r\n    <div className={style.pageList}>\r\n      {pages\r\n        .filter((page) => page >= leftPortion && page <= rightPortion)\r\n        .map((page) => {\r\n          return (\r\n            <span\r\n              className={props.currentPage === page && style.selectedPage}\r\n              onClick={(event_obrabotchik) => {\r\n                props.onPageChanged(page);\r\n              }}\r\n            >\r\n              {page}\r\n            </span>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paginator;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,IAAIC,SAAS,GAAGA,CAACC,KAAK,EAAE;EAAEC,OAAO,GAAG;AAAI,CAAC,KAAK;EAAAC,EAAA;EAC5C,IAAIC,eAAe,GAAGH,KAAK,CAACI,eAAe;EAC3C,IAAIC,WAAW,GAAGL,KAAK,CAACM,QAAQ;EAChC,IAAIC,WAAW,GAAGC,IAAI,CAACC,IAAI,CAACN,eAAe,GAAGE,WAAW,CAAC;EAC1D,IAAIK,UAAU,GAAGF,IAAI,CAACG,GAAG,CAACJ,WAAW,EAAEN,OAAO,CAAC;EAC/CW,OAAO,CAACC,GAAG,CAACN,WAAW,CAAC;EACxBK,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;EACvB,IAAI,CAACI,aAAa,EAAEC,gBAAgB,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EACnD,IAAIqB,WAAW,GAAG,CAACF,aAAa,GAAG,CAAC,IAAIT,WAAW,GAAG,CAAC;EACvD,IAAIY,YAAY,GAAGH,aAAa,GAAGT,WAAW;EAE9C,MAAMa,KAAK,GAAG,EAAE;EAChB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIT,UAAU,EAAES,CAAC,EAAE,EAAE;IACpCD,KAAK,CAACE,IAAI,CAACD,CAAC,CAAC;EACf;EAEA,oBACErB,OAAA;IAAKuB,SAAS,EAAEzB,KAAK,CAAC0B,QAAS;IAAAC,QAAA,EAC5BL,KAAK,CACHM,MAAM,CAAEC,IAAI,IAAKA,IAAI,IAAIT,WAAW,IAAIS,IAAI,IAAIR,YAAY,CAAC,CAC7DS,GAAG,CAAED,IAAI,IAAK;MACb,oBACE3B,OAAA;QACEuB,SAAS,EAAErB,KAAK,CAAC2B,WAAW,KAAKF,IAAI,IAAI7B,KAAK,CAACgC,YAAa;QAC5DC,OAAO,EAAGC,iBAAiB,IAAK;UAC9B9B,KAAK,CAAC+B,aAAa,CAACN,IAAI,CAAC;QAC3B,CAAE;QAAAF,QAAA,EAEDE;MAAI;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAEX,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV,CAAC;AAACjC,EAAA,CAlCEH,SAAS;AAAAqC,EAAA,GAATrC,SAAS;AAoCb,eAAeA,SAAS;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Leshen\\\\Desktop\\\\JS\\\\after_courses\\\\react\\\\ZooPlanet\\\\LeshenShow.github.io\\\\src\\\\components\\\\common\\\\Paginator\\\\Paginator.jsx\";\nimport React from \"react\";\nimport style from \"./Paginator.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet Paginator = props => {\n  console.log(\"Paginator\", props.pageSize);\n  let pagesMaximum = 10;\n  let pagesUpload = Math.ceil(props.totalUsersCount / props.pageSize);\n  let pagesCount = Math.min(pagesUpload, pagesMaximum);\n  let pages = [];\n  for (let index = 1; index <= pagesCount; index++) {\n    pages.push(index);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.pageList,\n    children: pages.map(page => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: props.currentPage === page && style.selectedPage,\n        onClick: event_obrabotchik => {\n          props.onPageChanged(page);\n        },\n        children: page\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = Paginator;\nexport default Paginator;\nvar _c;\n$RefreshReg$(_c, \"Paginator\");","map":{"version":3,"names":["React","style","jsxDEV","_jsxDEV","Paginator","props","console","log","pageSize","pagesMaximum","pagesUpload","Math","ceil","totalUsersCount","pagesCount","min","pages","index","push","className","pageList","children","map","page","currentPage","selectedPage","onClick","event_obrabotchik","onPageChanged","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Leshen/Desktop/JS/after_courses/react/ZooPlanet/LeshenShow.github.io/src/components/common/Paginator/Paginator.jsx"],"sourcesContent":["import React from \"react\";\r\nimport style from \"./Paginator.module.css\";\r\n\r\nlet Paginator = (props) => {\r\n  console.log(\"Paginator\", props.pageSize);\r\n  let pagesMaximum = 10;\r\n  let pagesUpload = Math.ceil(props.totalUsersCount / props.pageSize);\r\n  let pagesCount = Math.min(pagesUpload, pagesMaximum);\r\n  let pages = [];\r\n\r\n  for (let index = 1; index <= pagesCount; index++) {\r\n    pages.push(index);\r\n  }\r\n\r\n  return (\r\n    <div className={style.pageList}>\r\n      {pages.map((page) => {\r\n        return (\r\n          <span\r\n            className={props.currentPage === page && style.selectedPage}\r\n            onClick={(event_obrabotchik) => {\r\n              props.onPageChanged(page);\r\n            }}\r\n          >\r\n            {page}\r\n          </span>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paginator;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,IAAIC,SAAS,GAAIC,KAAK,IAAK;EACzBC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEF,KAAK,CAACG,QAAQ,CAAC;EACxC,IAAIC,YAAY,GAAG,EAAE;EACrB,IAAIC,WAAW,GAAGC,IAAI,CAACC,IAAI,CAACP,KAAK,CAACQ,eAAe,GAAGR,KAAK,CAACG,QAAQ,CAAC;EACnE,IAAIM,UAAU,GAAGH,IAAI,CAACI,GAAG,CAACL,WAAW,EAAED,YAAY,CAAC;EACpD,IAAIO,KAAK,GAAG,EAAE;EAEd,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,IAAIH,UAAU,EAAEG,KAAK,EAAE,EAAE;IAChDD,KAAK,CAACE,IAAI,CAACD,KAAK,CAAC;EACnB;EAEA,oBACEd,OAAA;IAAKgB,SAAS,EAAElB,KAAK,CAACmB,QAAS;IAAAC,QAAA,EAC5BL,KAAK,CAACM,GAAG,CAAEC,IAAI,IAAK;MACnB,oBACEpB,OAAA;QACEgB,SAAS,EAAEd,KAAK,CAACmB,WAAW,KAAKD,IAAI,IAAItB,KAAK,CAACwB,YAAa;QAC5DC,OAAO,EAAGC,iBAAiB,IAAK;UAC9BtB,KAAK,CAACuB,aAAa,CAACL,IAAI,CAAC;QAC3B,CAAE;QAAAF,QAAA,EAEDE;MAAI;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAEX,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GA3BE7B,SAAS;AA6Bb,eAAeA,SAAS;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Leshen\\\\Desktop\\\\JS\\\\after_courses\\\\react\\\\ZooPlanet\\\\LeshenShow.github.io\\\\src\\\\components\\\\Header\\\\HeaderContainer.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport Header from \"./Header\";\nimport { logout } from \"../../redux/authReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass HeaderContainer extends React.Component {\n  // componentDidMount() {\n  // console.log(\"componentDidMount\");\n  // this.props.getAuthUserData();\n\n  //// authAPI.getMe().then((data) => {\n  ////   console.log(\"Header response\", data); // чекаем что приходит проверять можно еще через store.getState() в консоли\n  ////   if (data.resultCode === 0) {\n  ////     let { id, email, login } = data.data;\n  ////     this.props.setAuthUserData(id, email, login);\n  ////   }\n  //// });\n  // }\n  render() {\n    return /*#__PURE__*/_jsxDEV(Header, {\n      ...this.props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n}\nconst mapStateToProps = state => ({\n  isAuth: state.auth.isAuth,\n  login: state.auth.login\n});\nconst mapDispatchToProps = {\n  logout\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer);","map":{"version":3,"names":["React","connect","Header","logout","jsxDEV","_jsxDEV","HeaderContainer","Component","render","props","fileName","_jsxFileName","lineNumber","columnNumber","mapStateToProps","state","isAuth","auth","login","mapDispatchToProps"],"sources":["C:/Users/Leshen/Desktop/JS/after_courses/react/ZooPlanet/LeshenShow.github.io/src/components/Header/HeaderContainer.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Header from \"./Header\";\r\nimport { logout } from \"../../redux/authReducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n  // componentDidMount() {\r\n  // console.log(\"componentDidMount\");\r\n  // this.props.getAuthUserData();\r\n\r\n  //// authAPI.getMe().then((data) => {\r\n  ////   console.log(\"Header response\", data); // чекаем что приходит проверять можно еще через store.getState() в консоли\r\n  ////   if (data.resultCode === 0) {\r\n  ////     let { id, email, login } = data.data;\r\n  ////     this.props.setAuthUserData(id, email, login);\r\n  ////   }\r\n  //// });\r\n  // }\r\n  render() {\r\n    return <Header {...this.props} />;\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login,\r\n});\r\nconst mapDispatchToProps = { logout };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer);\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,MAAM,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,eAAe,SAASN,KAAK,CAACO,SAAS,CAAC;EAC5C;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,MAAMA,CAAA,EAAG;IACP,oBAAOH,OAAA,CAACH,MAAM;MAAA,GAAK,IAAI,CAACO;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACnC;AACF;AACA,MAAMC,eAAe,GAAIC,KAAK,KAAM;EAClCC,MAAM,EAAED,KAAK,CAACE,IAAI,CAACD,MAAM;EACzBE,KAAK,EAAEH,KAAK,CAACE,IAAI,CAACC;AACpB,CAAC,CAAC;AACF,MAAMC,kBAAkB,GAAG;EAAEhB;AAAO,CAAC;AACrC,eAAeF,OAAO,CAACa,eAAe,EAAEK,kBAAkB,CAAC,CAACb,eAAe,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
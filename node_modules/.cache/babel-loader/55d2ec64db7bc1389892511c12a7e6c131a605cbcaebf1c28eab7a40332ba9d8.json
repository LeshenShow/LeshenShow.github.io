{"ast":null,"code":"import React from\"react\";import{connect}from\"react-redux\";import{follow,requestUsers,setCurrentPage,unfollow}from\"../../redux/usersReducer\";import Users from\"./Users\";import Preloader from\"../common/Preloader/Preloader\";import{compose}from\"redux\";import{getCurrentPage,getFollowingInProgress,getIsFetching,getPageSize,getTotalUsersCount,getUsers}from\"../../redux/usersSelectors\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";class UsersAPIComponent extends React.Component{constructor(){super(...arguments);// наследуемся от родит класса, иначе по умолчанию наследование идет\n// constructor(props) {\n//   super(props);\n// }\n// getUsers = () => {\n//   if (this.props.users.length === 0) {\n//     axios\n//       .get(\"https://social-network.samuraijs.com/api/1.0/users\")\n//       .then((response) => {\n//         this.props.setUsers(response.data.items);\n//       });\n//   }\n// };\n// ________________________________________________________________________________\n// до появления thunk\n//   console.log(\"componentDidMount\");\n//   this.props.toggleIsFetching(true);\n//   usersAPI\n//     .getUsers(this.props.currentPage, this.props.pageSize)\n//     .then((data) => {\n//       this.props.toggleIsFetching(false);\n//       let userList = data.items;\n//       let totalUsersCount = data.totalCount;\n//       this.props.setUsers(userList);\n//       this.props.setTotalUsersCount(totalUsersCount);\n//       // console.log(\"componentDidMount\", response);\n//       // console.log(\"data\", data);\n//     });\n// }\nthis.onPageChanged=pageNumberEvent=>{let{pageSize}=this.props;this.props.requestUsers(pageNumberEvent,pageSize);// this.props.toggleIsFetching(true);\n// this.props.setCurrentPage(pageNumberEvent);\n// usersAPI.getUsers(pageNumberEvent, this.props.pageSize).then((data) => {\n//   this.props.toggleIsFetching(false);\n//   this.props.setUsers(data.items);\n// });\n};}componentDidMount(){let{currentPage,pageSize}=this.props;this.props.requestUsers(currentPage,pageSize);}render(){return/*#__PURE__*/_jsxs(_Fragment,{children:[this.props.isFetching?/*#__PURE__*/_jsx(Preloader,{}):null,/*#__PURE__*/_jsx(Users,{totalUsersCount:this.props.totalUsersCount,pageSize:this.props.pageSize,currentPage:this.props.currentPage,users:this.props.users,follow:this.props.follow,unfollow:this.props.unfollow,onPageChanged:this.onPageChanged,followingInProgress:this.props.followingInProgress})]});}}let mapStateToProps=state=>{return{users:getUsers(state),// before ADD SELECTORS users: state.usersPage.users,\npageSize:getPageSize(state),totalUsersCount:getTotalUsersCount(state),currentPage:getCurrentPage(state),isFetching:getIsFetching(state),followingInProgress:getFollowingInProgress(state)};};let mapDispatchToProps={follow,unfollow,setCurrentPage,requestUsers};// export default withAuthRedirect(\n//   connect(mapStateToProps, mapDispatchToProps)(UsersAPIComponent)\n// );\nexport default compose(// withAuthRedirect, // добавляем защиту аутентификации\nconnect(mapStateToProps,mapDispatchToProps))(UsersAPIComponent);// let withRedirect = withAuthRedirect(UsersAPIComponent);\n// export default connect(mapStateToProps, mapDispatchToProps)(withRedirect);\n// let mapDispatchToProps = (dispatch = null) => {\n//   return {\n//     follow: (userId) => {dispatch(followAC(userId));},\n//     unfollow: (userId) => {dispatch(unfollowAC(userId));},\n//     setUsers: (users) => {dispatch(setUsersAC(users));},\n//     setCurrentPage: (currentPage) => {dispatch(setCurrentPageAC(currentPage));},\n//     setTotalUsersCount: (totalUsersCount) => {dispatch(setTotalUsersCountAC(totalUsersCount));},\n//     toggleIsFetching: (isFetching) => {dispatch(toggleIsFetchingAC(isFetching));},\n//   };};\n// ------------------->\n// let mapDispatchToProps = {\n//   follow: followAC,\n//   unfollow: unfollowAC,\n//   setUsers: setUsersAC,\n//   setCurrentPage: setCurrentPageAC,\n//   setTotalUsersCount: setTotalUsersCountAC,\n//   toggleIsFetching: toggleIsFetchingAC,\n// };","map":{"version":3,"names":["React","connect","follow","requestUsers","setCurrentPage","unfollow","Users","Preloader","compose","getCurrentPage","getFollowingInProgress","getIsFetching","getPageSize","getTotalUsersCount","getUsers","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","UsersAPIComponent","Component","constructor","arguments","onPageChanged","pageNumberEvent","pageSize","props","componentDidMount","currentPage","render","children","isFetching","totalUsersCount","users","followingInProgress","mapStateToProps","state","mapDispatchToProps"],"sources":["C:/Users/Leshen/Desktop/JS/after_courses/react/ZooPlanet/LeshenShow.github.io/src/components/Users/UsersContainer.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  follow,\r\n  requestUsers,\r\n  setCurrentPage,\r\n  unfollow,\r\n} from \"../../redux/usersReducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport { compose } from \"redux\";\r\nimport {\r\n  getCurrentPage,\r\n  getFollowingInProgress,\r\n  getIsFetching,\r\n  getPageSize,\r\n  getTotalUsersCount,\r\n  getUsers,\r\n} from \"../../redux/usersSelectors\";\r\n\r\nclass UsersAPIComponent extends React.Component {\r\n  componentDidMount() {\r\n    let { currentPage, pageSize } = this.props;\r\n    this.props.requestUsers(currentPage, pageSize);\r\n  }\r\n  // наследуемся от родит класса, иначе по умолчанию наследование идет\r\n  // constructor(props) {\r\n  //   super(props);\r\n  // }\r\n  // getUsers = () => {\r\n  //   if (this.props.users.length === 0) {\r\n  //     axios\r\n  //       .get(\"https://social-network.samuraijs.com/api/1.0/users\")\r\n  //       .then((response) => {\r\n  //         this.props.setUsers(response.data.items);\r\n  //       });\r\n  //   }\r\n  // };\r\n  // ________________________________________________________________________________\r\n  // до появления thunk\r\n  //   console.log(\"componentDidMount\");\r\n  //   this.props.toggleIsFetching(true);\r\n\r\n  //   usersAPI\r\n  //     .getUsers(this.props.currentPage, this.props.pageSize)\r\n  //     .then((data) => {\r\n  //       this.props.toggleIsFetching(false);\r\n  //       let userList = data.items;\r\n  //       let totalUsersCount = data.totalCount;\r\n  //       this.props.setUsers(userList);\r\n  //       this.props.setTotalUsersCount(totalUsersCount);\r\n  //       // console.log(\"componentDidMount\", response);\r\n  //       // console.log(\"data\", data);\r\n  //     });\r\n  // }\r\n  onPageChanged = (pageNumberEvent) => {\r\n    let { pageSize } = this.props;\r\n    this.props.requestUsers(pageNumberEvent, pageSize);\r\n    // this.props.toggleIsFetching(true);\r\n    // this.props.setCurrentPage(pageNumberEvent);\r\n    // usersAPI.getUsers(pageNumberEvent, this.props.pageSize).then((data) => {\r\n    //   this.props.toggleIsFetching(false);\r\n    //   this.props.setUsers(data.items);\r\n    // });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.isFetching ? <Preloader /> : null}\r\n        <Users\r\n          totalUsersCount={this.props.totalUsersCount}\r\n          pageSize={this.props.pageSize}\r\n          currentPage={this.props.currentPage}\r\n          users={this.props.users}\r\n          follow={this.props.follow}\r\n          unfollow={this.props.unfollow}\r\n          onPageChanged={this.onPageChanged}\r\n          followingInProgress={this.props.followingInProgress}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    users: getUsers(state), // before ADD SELECTORS users: state.usersPage.users,\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state),\r\n  };\r\n};\r\nlet mapDispatchToProps = {\r\n  follow,\r\n  unfollow,\r\n  setCurrentPage,\r\n  requestUsers,\r\n};\r\n// export default withAuthRedirect(\r\n//   connect(mapStateToProps, mapDispatchToProps)(UsersAPIComponent)\r\n// );\r\nexport default compose(\r\n  // withAuthRedirect, // добавляем защиту аутентификации\r\n  connect(mapStateToProps, mapDispatchToProps)\r\n)(UsersAPIComponent);\r\n\r\n// let withRedirect = withAuthRedirect(UsersAPIComponent);\r\n// export default connect(mapStateToProps, mapDispatchToProps)(withRedirect);\r\n\r\n// let mapDispatchToProps = (dispatch = null) => {\r\n//   return {\r\n//     follow: (userId) => {dispatch(followAC(userId));},\r\n//     unfollow: (userId) => {dispatch(unfollowAC(userId));},\r\n//     setUsers: (users) => {dispatch(setUsersAC(users));},\r\n//     setCurrentPage: (currentPage) => {dispatch(setCurrentPageAC(currentPage));},\r\n//     setTotalUsersCount: (totalUsersCount) => {dispatch(setTotalUsersCountAC(totalUsersCount));},\r\n//     toggleIsFetching: (isFetching) => {dispatch(toggleIsFetchingAC(isFetching));},\r\n//   };};\r\n// ------------------->\r\n// let mapDispatchToProps = {\r\n//   follow: followAC,\r\n//   unfollow: unfollowAC,\r\n//   setUsers: setUsersAC,\r\n//   setCurrentPage: setCurrentPageAC,\r\n//   setTotalUsersCount: setTotalUsersCountAC,\r\n//   toggleIsFetching: toggleIsFetchingAC,\r\n// };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
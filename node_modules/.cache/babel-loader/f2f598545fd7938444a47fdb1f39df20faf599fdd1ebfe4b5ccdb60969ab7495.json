{"ast":null,"code":"import{authAPI}from\"../api/api\";import{stopSubmit}from\"redux-form\";const SET_AUTH_USER_DATA=\"auth/SET_AUTH_USER_DATA\";// STATE\nlet initialState={userId:null,email:null,login:null,isAuth:false};const authReducer=function(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case SET_AUTH_USER_DATA:return{...state,...action.payload};default:break;}return state;};// ACTION CREATOR\nexport const setAuthUserData=(userId,email,login,isAuth)=>({type:SET_AUTH_USER_DATA,payload:{userId,email,login,isAuth}});// THUNK\n// export const getAuthUserData = () => (dispatch) => {\n//   return authAPI.getMe().then((response) => {\n//     if (response.data.resultCode === 0) {\n//       let { id, email, login } = response.data.data;\n//       dispatch(setAuthUserData(id, email, login, true));\n//     }\n//   });\n// };\nexport const getAuthUserData=()=>async dispatch=>{let response=await authAPI.getMe();if(response.data.resultCode===0){let{id,email,login}=response.data.data;dispatch(setAuthUserData(id,email,login,true));}};export const login=(email,password,rememberMe)=>async dispatch=>{let response=await authAPI.login(email,password,rememberMe);if(response.data.resultCode===0){dispatch(getAuthUserData());}else{let message=response.data.messages.length>0?response.data.messages[0]:\"Some Error\";dispatch(stopSubmit(\"login\",{_error:message}));}};export const logout=()=>async dispatch=>{let response=await authAPI.logout();if(response.data.resultCode===0){dispatch(setAuthUserData(null,null,null,false));}};export default authReducer;","map":{"version":3,"names":["authAPI","stopSubmit","SET_AUTH_USER_DATA","initialState","userId","email","login","isAuth","authReducer","state","arguments","length","undefined","action","type","payload","setAuthUserData","getAuthUserData","dispatch","response","getMe","data","resultCode","id","password","rememberMe","message","messages","_error","logout"],"sources":["C:/Users/Leshen/Desktop/JS/after_courses/react/ZooPlanet/LeshenShow.github.io/src/redux/authReducer.js"],"sourcesContent":["import { authAPI } from \"../api/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\nconst SET_AUTH_USER_DATA = \"auth/SET_AUTH_USER_DATA\";\r\n// STATE\r\nlet initialState = {\r\n  userId: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false,\r\n};\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_AUTH_USER_DATA:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n// ACTION CREATOR\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n  type: SET_AUTH_USER_DATA,\r\n  payload: { userId, email, login, isAuth },\r\n});\r\n// THUNK\r\n// export const getAuthUserData = () => (dispatch) => {\r\n//   return authAPI.getMe().then((response) => {\r\n//     if (response.data.resultCode === 0) {\r\n//       let { id, email, login } = response.data.data;\r\n//       dispatch(setAuthUserData(id, email, login, true));\r\n//     }\r\n//   });\r\n// };\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n  let response = await authAPI.getMe();\r\n  if (response.data.resultCode === 0) {\r\n    let { id, email, login } = response.data.data;\r\n    dispatch(setAuthUserData(id, email, login, true));\r\n  }\r\n};\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n  let response = await authAPI.login(email, password, rememberMe);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(getAuthUserData());\r\n  } else {\r\n    let message =\r\n      response.data.messages.length > 0\r\n        ? response.data.messages[0]\r\n        : \"Some Error\";\r\n    dispatch(\r\n      stopSubmit(\"login\", {\r\n        _error: message,\r\n      })\r\n    );\r\n  }\r\n};\r\nexport const logout = () => async (dispatch) => {\r\n  let response = await authAPI.logout();\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setAuthUserData(null, null, null, false));\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n"],"mappings":"AAAA,OAASA,OAAO,KAAQ,YAAY,CACpC,OAASC,UAAU,KAAQ,YAAY,CAEvC,KAAM,CAAAC,kBAAkB,CAAG,yBAAyB,CACpD;AACA,GAAI,CAAAC,YAAY,CAAG,CACjBC,MAAM,CAAE,IAAI,CACZC,KAAK,CAAE,IAAI,CACXC,KAAK,CAAE,IAAI,CACXC,MAAM,CAAE,KACV,CAAC,CACD,KAAM,CAAAC,WAAW,CAAG,QAAAA,CAAA,CAAkC,IAAjC,CAAAC,KAAK,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAGP,YAAY,IAAE,CAAAU,MAAM,CAAAH,SAAA,CAAAC,MAAA,GAAAD,SAAA,IAAAE,SAAA,CAC/C,OAAQC,MAAM,CAACC,IAAI,EACjB,IAAK,CAAAZ,kBAAkB,CACrB,MAAO,CACL,GAAGO,KAAK,CACR,GAAGI,MAAM,CAACE,OACZ,CAAC,CACH,QACE,MACJ,CACA,MAAO,CAAAN,KAAK,CACd,CAAC,CACD;AACA,MAAO,MAAM,CAAAO,eAAe,CAAGA,CAACZ,MAAM,CAAEC,KAAK,CAAEC,KAAK,CAAEC,MAAM,IAAM,CAChEO,IAAI,CAAEZ,kBAAkB,CACxBa,OAAO,CAAE,CAAEX,MAAM,CAAEC,KAAK,CAAEC,KAAK,CAAEC,MAAO,CAC1C,CAAC,CAAC,CACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAO,MAAM,CAAAU,eAAe,CAAGA,CAAA,GAAM,KAAO,CAAAC,QAAQ,EAAK,CACvD,GAAI,CAAAC,QAAQ,CAAG,KAAM,CAAAnB,OAAO,CAACoB,KAAK,CAAC,CAAC,CACpC,GAAID,QAAQ,CAACE,IAAI,CAACC,UAAU,GAAK,CAAC,CAAE,CAClC,GAAI,CAAEC,EAAE,CAAElB,KAAK,CAAEC,KAAM,CAAC,CAAGa,QAAQ,CAACE,IAAI,CAACA,IAAI,CAC7CH,QAAQ,CAACF,eAAe,CAACO,EAAE,CAAElB,KAAK,CAAEC,KAAK,CAAE,IAAI,CAAC,CAAC,CACnD,CACF,CAAC,CAED,MAAO,MAAM,CAAAA,KAAK,CAAGA,CAACD,KAAK,CAAEmB,QAAQ,CAAEC,UAAU,GAAK,KAAO,CAAAP,QAAQ,EAAK,CACxE,GAAI,CAAAC,QAAQ,CAAG,KAAM,CAAAnB,OAAO,CAACM,KAAK,CAACD,KAAK,CAAEmB,QAAQ,CAAEC,UAAU,CAAC,CAC/D,GAAIN,QAAQ,CAACE,IAAI,CAACC,UAAU,GAAK,CAAC,CAAE,CAClCJ,QAAQ,CAACD,eAAe,CAAC,CAAC,CAAC,CAC7B,CAAC,IAAM,CACL,GAAI,CAAAS,OAAO,CACTP,QAAQ,CAACE,IAAI,CAACM,QAAQ,CAAChB,MAAM,CAAG,CAAC,CAC7BQ,QAAQ,CAACE,IAAI,CAACM,QAAQ,CAAC,CAAC,CAAC,CACzB,YAAY,CAClBT,QAAQ,CACNjB,UAAU,CAAC,OAAO,CAAE,CAClB2B,MAAM,CAAEF,OACV,CAAC,CACH,CAAC,CACH,CACF,CAAC,CACD,MAAO,MAAM,CAAAG,MAAM,CAAGA,CAAA,GAAM,KAAO,CAAAX,QAAQ,EAAK,CAC9C,GAAI,CAAAC,QAAQ,CAAG,KAAM,CAAAnB,OAAO,CAAC6B,MAAM,CAAC,CAAC,CACrC,GAAIV,QAAQ,CAACE,IAAI,CAACC,UAAU,GAAK,CAAC,CAAE,CAClCJ,QAAQ,CAACF,eAAe,CAAC,IAAI,CAAE,IAAI,CAAE,IAAI,CAAE,KAAK,CAAC,CAAC,CACpD,CACF,CAAC,CAED,cAAe,CAAAR,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import React from\"react\";import style from\"./Dialogs.module.css\";import Message from\"./MessageItem/MessageItem\";import DialogItem from\"./DialogItem/DialogItem\";import{Field,reduxForm}from\"redux-form\";import{validators}from\"../../utils/validators/validators\";import{Textarea}from\"../common/FormsControls/FormsControls\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Dialogs=props=>{console.log(\"Dialogs\",props);// console.log('Dialogs')\n// console.log(props)\n// debugger\n//   let dialogsItems = [\n//     <DialogItem name={dialogsData[0].name} id={dialogsData[0].id} />,\n//     <DialogItem name={dialogsData[1].name} id={dialogsData[1].id} />,\n//     <DialogItem name={dialogsData[2].name} id={dialogsData[2].id} />,\n//     <DialogItem name={dialogsData[3].name} id={dialogsData[3].id} />,\n//     <DialogItem name={dialogsData[4].name} id={dialogsData[4].id} />,\n//     <DialogItem name={dialogsData[5].name} id={dialogsData[5].id} />,];\n// let dialogItems = dialogsData.map( (dialog) => { return <DialogItem name={dialog.name} id={dialog.id}/>} );\nlet dialogItems=props.dialogsPage.dialogsData.map(dialog=>/*#__PURE__*/_jsx(DialogItem,{name:dialog.name,photo:dialog.photo},dialog.id));let messageItems=props.dialogsPage.messagesData.map(message=>/*#__PURE__*/_jsx(Message,{message:message.message},message.id));const addNewMessage=formData=>{props.addMessage(formData.newMessageBody);};return/*#__PURE__*/_jsxs(\"div\",{className:style.dialogs,children:[/*#__PURE__*/_jsx(\"div\",{className:style.dialogItems,children:dialogItems}),/*#__PURE__*/_jsxs(\"div\",{className:style.messages,children:[messageItems,/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(DialogReduxForm,{onSubmit:addNewMessage})})]})]});};const DialogForm=props=>{console.log(\"DialogForm\",props,\"\");// let newMessageText = props.dialogsPage.newMessageText;\nreturn/*#__PURE__*/_jsxs(\"form\",{onSubmit:props.handleSubmit,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Field,{placeholder:\"Write a new message...\",className:style.textarea,name:\"newMessageBody\",component:Textarea,validate:[validators.required,validators.maxLength15,validators.minLength2]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{children:\"Send\"})})]});};const DialogReduxForm=reduxForm({form:\"dialog\"// unique name for the form\n})(DialogForm);export default Dialogs;","map":{"version":3,"names":["React","style","Message","DialogItem","Field","reduxForm","validators","Textarea","jsx","_jsx","jsxs","_jsxs","Dialogs","props","console","log","dialogItems","dialogsPage","dialogsData","map","dialog","name","photo","id","messageItems","messagesData","message","addNewMessage","formData","addMessage","newMessageBody","className","dialogs","children","messages","DialogReduxForm","onSubmit","DialogForm","handleSubmit","placeholder","textarea","component","validate","required","maxLength15","minLength2","form"],"sources":["C:/Users/Leshen/Desktop/JS/after_courses/react/ZooPlanet/LeshenShow.github.io/src/components/Dialogs/Dialogs.jsx"],"sourcesContent":["import React from \"react\";\r\nimport style from \"./Dialogs.module.css\";\r\nimport Message from \"./MessageItem/MessageItem\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { validators } from \"../../utils/validators/validators\";\r\nimport { Textarea } from \"../common/FormsControls/FormsControls\";\r\n\r\nconst Dialogs = (props) => {\r\n  console.log(\"Dialogs\", props);\r\n  // console.log('Dialogs')\r\n  // console.log(props)\r\n  // debugger\r\n  //   let dialogsItems = [\r\n  //     <DialogItem name={dialogsData[0].name} id={dialogsData[0].id} />,\r\n  //     <DialogItem name={dialogsData[1].name} id={dialogsData[1].id} />,\r\n  //     <DialogItem name={dialogsData[2].name} id={dialogsData[2].id} />,\r\n  //     <DialogItem name={dialogsData[3].name} id={dialogsData[3].id} />,\r\n  //     <DialogItem name={dialogsData[4].name} id={dialogsData[4].id} />,\r\n  //     <DialogItem name={dialogsData[5].name} id={dialogsData[5].id} />,];\r\n  // let dialogItems = dialogsData.map( (dialog) => { return <DialogItem name={dialog.name} id={dialog.id}/>} );\r\n  let dialogItems = props.dialogsPage.dialogsData.map((dialog) => (\r\n    <DialogItem name={dialog.name} key={dialog.id} photo={dialog.photo} />\r\n  ));\r\n  let messageItems = props.dialogsPage.messagesData.map((message) => (\r\n    <Message message={message.message} key={message.id} />\r\n  ));\r\n  const addNewMessage = (formData) => {\r\n    props.addMessage(formData.newMessageBody);\r\n  };\r\n\r\n  return (\r\n    <div className={style.dialogs}>\r\n      <div className={style.dialogItems}>{dialogItems}</div>\r\n      <div className={style.messages}>\r\n        {messageItems}\r\n        <div>\r\n          <DialogReduxForm onSubmit={addNewMessage} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DialogForm = (props) => {\r\n  console.log(\"DialogForm\", props, \"\");\r\n  // let newMessageText = props.dialogsPage.newMessageText;\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          placeholder=\"Write a new message...\"\r\n          className={style.textarea}\r\n          name={\"newMessageBody\"}\r\n          component={Textarea}\r\n          validate={[\r\n            validators.required,\r\n            validators.maxLength15,\r\n            validators.minLength2,\r\n          ]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nconst DialogReduxForm = reduxForm({\r\n  form: \"dialog\", // unique name for the form\r\n})(DialogForm);\r\n\r\nexport default Dialogs;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,KAAK,KAAM,sBAAsB,CACxC,MAAO,CAAAC,OAAO,KAAM,2BAA2B,CAC/C,MAAO,CAAAC,UAAU,KAAM,yBAAyB,CAChD,OAASC,KAAK,CAAEC,SAAS,KAAQ,YAAY,CAC7C,OAASC,UAAU,KAAQ,mCAAmC,CAC9D,OAASC,QAAQ,KAAQ,uCAAuC,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEjE,KAAM,CAAAC,OAAO,CAAIC,KAAK,EAAK,CACzBC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAEF,KAAK,CAAC,CAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAI,CAAAG,WAAW,CAAGH,KAAK,CAACI,WAAW,CAACC,WAAW,CAACC,GAAG,CAAEC,MAAM,eACzDX,IAAA,CAACN,UAAU,EAACkB,IAAI,CAAED,MAAM,CAACC,IAAK,CAAiBC,KAAK,CAAEF,MAAM,CAACE,KAAM,EAA/BF,MAAM,CAACG,EAA0B,CACtE,CAAC,CACF,GAAI,CAAAC,YAAY,CAAGX,KAAK,CAACI,WAAW,CAACQ,YAAY,CAACN,GAAG,CAAEO,OAAO,eAC5DjB,IAAA,CAACP,OAAO,EAACwB,OAAO,CAAEA,OAAO,CAACA,OAAQ,EAAMA,OAAO,CAACH,EAAK,CACtD,CAAC,CACF,KAAM,CAAAI,aAAa,CAAIC,QAAQ,EAAK,CAClCf,KAAK,CAACgB,UAAU,CAACD,QAAQ,CAACE,cAAc,CAAC,CAC3C,CAAC,CAED,mBACEnB,KAAA,QAAKoB,SAAS,CAAE9B,KAAK,CAAC+B,OAAQ,CAAAC,QAAA,eAC5BxB,IAAA,QAAKsB,SAAS,CAAE9B,KAAK,CAACe,WAAY,CAAAiB,QAAA,CAAEjB,WAAW,CAAM,CAAC,cACtDL,KAAA,QAAKoB,SAAS,CAAE9B,KAAK,CAACiC,QAAS,CAAAD,QAAA,EAC5BT,YAAY,cACbf,IAAA,QAAAwB,QAAA,cACExB,IAAA,CAAC0B,eAAe,EAACC,QAAQ,CAAET,aAAc,CAAE,CAAC,CACzC,CAAC,EACH,CAAC,EACH,CAAC,CAEV,CAAC,CAED,KAAM,CAAAU,UAAU,CAAIxB,KAAK,EAAK,CAC5BC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAEF,KAAK,CAAE,EAAE,CAAC,CACpC;AACA,mBACEF,KAAA,SAAMyB,QAAQ,CAAEvB,KAAK,CAACyB,YAAa,CAAAL,QAAA,eACjCxB,IAAA,QAAAwB,QAAA,cACExB,IAAA,CAACL,KAAK,EACJmC,WAAW,CAAC,wBAAwB,CACpCR,SAAS,CAAE9B,KAAK,CAACuC,QAAS,CAC1BnB,IAAI,CAAE,gBAAiB,CACvBoB,SAAS,CAAElC,QAAS,CACpBmC,QAAQ,CAAE,CACRpC,UAAU,CAACqC,QAAQ,CACnBrC,UAAU,CAACsC,WAAW,CACtBtC,UAAU,CAACuC,UAAU,CACrB,CACH,CAAC,CACC,CAAC,cACNpC,IAAA,QAAAwB,QAAA,cACExB,IAAA,WAAAwB,QAAA,CAAQ,MAAI,CAAQ,CAAC,CAClB,CAAC,EACF,CAAC,CAEX,CAAC,CACD,KAAM,CAAAE,eAAe,CAAG9B,SAAS,CAAC,CAChCyC,IAAI,CAAE,QAAU;AAClB,CAAC,CAAC,CAACT,UAAU,CAAC,CAEd,cAAe,CAAAzB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
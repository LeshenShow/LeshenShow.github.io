{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Leshen\\\\Desktop\\\\JS\\\\after_courses\\\\react\\\\ZooPlanet\\\\LeshenShow.github.io\\\\src\\\\index.js\";\nimport React from \"react\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\nimport store from \"./redux/redux-store\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport SamuraiJSApp from \"./App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nlet rerenderEntireTree = state => {\n  root.render( /*#__PURE__*/_jsxDEV(SamuraiJSApp, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 15\n  }, this));\n};\nrerenderEntireTree(store.getState());\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n// reportWebVitals(console.log);\n\n//  before 92 lection\n// const root = ReactDOM.createRoot(document.getElementById(\"root\"));\n\n// let rerenderEntireTree = (state) => {\n//   root.render(\n//     <BrowserRouter>\n//       <Provider store={store}>\n//         <App />\n//       </Provider>\n//     </BrowserRouter>\n//   );\n// };\n// rerenderEntireTree(store.getState());\n// C:\\Users\\Leshen\\Desktop\\JS\\after_courses\\react\\ZooPlanet\\LeshenShow.github.io\\src\\App.js","map":{"version":3,"names":["React","reportWebVitals","ReactDOM","App","store","BrowserRouter","Provider","SamuraiJSApp","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","rerenderEntireTree","state","render","fileName","_jsxFileName","lineNumber","columnNumber","getState"],"sources":["C:/Users/Leshen/Desktop/JS/after_courses/react/ZooPlanet/LeshenShow.github.io/src/index.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./index.css\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport App from \"./App\";\r\nimport store from \"./redux/redux-store\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport SamuraiJSApp from \"./App\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\n\r\nlet rerenderEntireTree = (state) => {\r\n  root.render(<SamuraiJSApp />);\r\n};\r\nrerenderEntireTree(store.getState());\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n// reportWebVitals(console.log);\r\n\r\n//  before 92 lection\r\n// const root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\n\r\n// let rerenderEntireTree = (state) => {\r\n//   root.render(\r\n//     <BrowserRouter>\r\n//       <Provider store={store}>\r\n//         <App />\r\n//       </Provider>\r\n//     </BrowserRouter>\r\n//   );\r\n// };\r\n// rerenderEntireTree(store.getState());\r\n// C:\\Users\\Leshen\\Desktop\\JS\\after_courses\\react\\ZooPlanet\\LeshenShow.github.io\\src\\App.js\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AACpB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,KAAK,MAAM,qBAAqB;AACvC,SAASC,aAAa,QAAQ,kBAAkB;AAChD,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAOC,YAAY,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,IAAI,GAAGR,QAAQ,CAACS,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AAEjE,IAAIC,kBAAkB,GAAIC,KAAK,IAAK;EAClCL,IAAI,CAACM,MAAM,eAACP,OAAA,CAACF,YAAY;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,CAAC;AAC/B,CAAC;AACDN,kBAAkB,CAACV,KAAK,CAACiB,QAAQ,CAAC,CAAC,CAAC;;AAEpC;AACA;AACA;AACApB,eAAe,CAAC,CAAC;AACjB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
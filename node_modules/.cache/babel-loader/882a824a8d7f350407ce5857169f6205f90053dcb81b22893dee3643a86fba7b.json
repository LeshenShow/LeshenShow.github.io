{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Leshen\\\\Desktop\\\\JS\\\\after_courses\\\\react\\\\ZooPlanet\\\\LeshenShow.github.io\\\\src\\\\hoc\\\\withAuthRedirect.jsx\";\nimport React, { Component } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n// export let AuthRedirectComponent = (props) => {\n//   if (!this.props.isAuth) {\n//     return <Navigate to={\"/login\"} />;\n//   }\n//   return <Component {...props} />;\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet mapStateToPropsForRedirect = state => ({\n  isAuth: state.auth.isAuth\n});\nexport const withAuthRedirect = Component => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 38\n      }, this);\n      return /*#__PURE__*/_jsxDEV(Component, {\n        ...this.props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 14\n      }, this);\n    }\n  }\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n  return ConnectedAuthRedirectComponent;\n};","map":{"version":3,"names":["React","Component","Navigate","connect","jsxDEV","_jsxDEV","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","RedirectComponent","render","props","to","fileName","_jsxFileName","lineNumber","columnNumber","ConnectedAuthRedirectComponent"],"sources":["C:/Users/Leshen/Desktop/JS/after_courses/react/ZooPlanet/LeshenShow.github.io/src/hoc/withAuthRedirect.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n// export let AuthRedirectComponent = (props) => {\r\n//   if (!this.props.isAuth) {\r\n//     return <Navigate to={\"/login\"} />;\r\n//   }\r\n//   return <Component {...props} />;\r\n// };\r\nlet mapStateToPropsForRedirect = (state) => ({ isAuth: state.auth.isAuth });\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Navigate to={\"/login\"} />;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,aAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,IAAIC,0BAA0B,GAAIC,KAAK,KAAM;EAAEC,MAAM,EAAED,KAAK,CAACE,IAAI,CAACD;AAAO,CAAC,CAAC;AAE3E,OAAO,MAAME,gBAAgB,GAAIT,SAAS,IAAK;EAC7C,MAAMU,iBAAiB,SAASX,KAAK,CAACC,SAAS,CAAC;IAC9CW,MAAMA,CAAA,EAAG;MACP,IAAI,CAAC,IAAI,CAACC,KAAK,CAACL,MAAM,EAAE,oBAAOH,OAAA,CAACH,QAAQ;QAACY,EAAE,EAAE;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MACzD,oBAAOb,OAAA,CAACJ,SAAS;QAAA,GAAK,IAAI,CAACY;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IACtC;EACF;EACA,IAAIC,8BAA8B,GAAGhB,OAAO,CAACG,0BAA0B,CAAC,CACtEK,iBACF,CAAC;EACD,OAAOQ,8BAA8B;AACvC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
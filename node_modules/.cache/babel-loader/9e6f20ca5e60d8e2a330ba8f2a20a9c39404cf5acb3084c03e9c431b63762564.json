{"ast":null,"code":"import { getAuthUserData } from \"./authReducer\";\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\";\n// STATE\nlet initialState = {\n  initialized: false\n};\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INITIALIZED_SUCCESS:\n      return {\n        ...state,\n        initialized: true\n      };\n    default:\n      break;\n  }\n  return state;\n};\n// ACTION CREATOR\nexport const setInitializedSuccess = () => ({\n  type: INITIALIZED_SUCCESS\n});\n// THUNK\nexport const initializeApp = () => {\n  return dispatch => {\n    // мы сделали возврат диспатча в authReducer, что не рекомендуется делать, получили промис т.к. then возвращает тоже промис\n    let promise = dispatch(getAuthUserData());\n    // let promise2 = dispatch(some());\n    // let promise3 = dispatch(some());\n    // когда все промисы получает ответ, тогда диспатч\n    Promise.all([promise]).then(() => {\n      dispatch(setInitializedSuccess());\n    });\n  };\n};\nexport default appReducer;","map":{"version":3,"names":["getAuthUserData","INITIALIZED_SUCCESS","initialState","initialized","appReducer","state","action","type","setInitializedSuccess","initializeApp","dispatch","promise","Promise","all","then"],"sources":["C:/Users/Leshen/Desktop/JS/after_courses/react/ZooPlanet/LeshenShow.github.io/src/redux/appReducer.js"],"sourcesContent":["import { getAuthUserData } from \"./authReducer\";\r\n\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\";\r\n// STATE\r\nlet initialState = {\r\n  initialized: false,\r\n};\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        initialized: true,\r\n      };\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n// ACTION CREATOR\r\nexport const setInitializedSuccess = () => ({\r\n  type: INITIALIZED_SUCCESS,\r\n});\r\n// THUNK\r\nexport const initializeApp = () => {\r\n  return (dispatch) => {\r\n    // мы сделали возврат диспатча в authReducer, что не рекомендуется делать, получили промис т.к. then возвращает тоже промис\r\n    let promise = dispatch(getAuthUserData());\r\n    // let promise2 = dispatch(some());\r\n    // let promise3 = dispatch(some());\r\n    // когда все промисы получает ответ, тогда диспатч\r\n    Promise.all([promise]).then(() => {\r\n      dispatch(setInitializedSuccess());\r\n    });\r\n  };\r\n};\r\n\r\nexport default appReducer;\r\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,eAAe;AAE/C,MAAMC,mBAAmB,GAAG,qBAAqB;AACjD;AACA,IAAIC,YAAY,GAAG;EACjBC,WAAW,EAAE;AACf,CAAC;AACD,MAAMC,UAAU,GAAGA,CAACC,KAAK,GAAGH,YAAY,EAAEI,MAAM,KAAK;EACnD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKN,mBAAmB;MACtB,OAAO;QACL,GAAGI,KAAK;QACRF,WAAW,EAAE;MACf,CAAC;IACH;MACE;EACJ;EACA,OAAOE,KAAK;AACd,CAAC;AACD;AACA,OAAO,MAAMG,qBAAqB,GAAGA,CAAA,MAAO;EAC1CD,IAAI,EAAEN;AACR,CAAC,CAAC;AACF;AACA,OAAO,MAAMQ,aAAa,GAAGA,CAAA,KAAM;EACjC,OAAQC,QAAQ,IAAK;IACnB;IACA,IAAIC,OAAO,GAAGD,QAAQ,CAACV,eAAe,CAAC,CAAC,CAAC;IACzC;IACA;IACA;IACAY,OAAO,CAACC,GAAG,CAAC,CAACF,OAAO,CAAC,CAAC,CAACG,IAAI,CAAC,MAAM;MAChCJ,QAAQ,CAACF,qBAAqB,CAAC,CAAC,CAAC;IACnC,CAAC,CAAC;EACJ,CAAC;AACH,CAAC;AAED,eAAeJ,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}